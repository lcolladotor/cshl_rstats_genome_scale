[["index.html", "Statistical Analysis of Genome Scale Data 2023 Overview Code of Conduct Course Schedule External links Course Prerequisites R session information License", " Statistical Analysis of Genome Scale Data 2023 Leonardo Collado-Torres Overview Here you can find the files for the July 2023 Statistical Analysis of Genome Scale Data course at CSHL portion taught by Leo and his team (July 3rd to July 6th). Instructor: Leonardo Collado-Torres, Twitter Teach assistants: Daianna González Padilla, Twitter Fernanda Renee García Flores, Twitter Download the materials for this course with usethis::use_course('lcolladotor/cshl_rstats_genome_scale_2023') or view online at lcolladotor.github.io/cshl_rstats_genome_scale_2023. Code of Conduct We’ll follow the CSHL code of conduct as well as version 1.2.0 of the Bioconductor code of conduct bioconductor.github.io/bioc_coc_multilingual/. For reporting any violations of the code of conduct, report them to the Instructor and/or Course Coordinators. Course Schedule Local times in US Eastern Monday July 3rd Tuesday July 4th Wednesday July 5th Thursday July 6th External links CSHL course GitHub source code Slack. LieberInstitute/template_project Example real project (by Daianna): LieberInstitute/smokingMouse_Indirects SPEAQeasyWorkshop2023 for BioC2023 (by Daianna and Renee): LieberInstitute/SPEAQeasyWorkshop2023 Course Prerequisites Install R 4.3.x from CRAN then install the following R packages: ## For installing Bioconductor packages if (!requireNamespace(&quot;BiocManager&quot;, quietly = TRUE)) { install.packages(&quot;BiocManager&quot;) } ## Install required packages BiocManager::install( c( &quot;usethis&quot;, ## Utilities &quot;BiocFileCache&quot;, &quot;RefManageR&quot;, &quot;here&quot;, &quot;Hmisc&quot;, &quot;biocthis&quot;, &quot;lobstr&quot;, &quot;postcards&quot;, &quot;scater&quot;, &quot;sessioninfo&quot;, &quot;smokingMouse&quot;, &quot;stringr&quot;, &quot;SummarizedExperiment&quot;, ## Main containers / vis &quot;iSEE&quot;, &quot;edgeR&quot;, ## RNA-seq &quot;ExploreModelMatrix&quot;, &quot;limma&quot;, &quot;recount3&quot;, &quot;rlang&quot;, &quot;pheatmap&quot;, ## Visualization &quot;ggplot2&quot;, &quot;ggrepel&quot;, &quot;patchwork&quot;, &quot;RColorBrewer&quot;, &quot;ComplexHeatmap&quot;, &quot;cowplot&quot;, &quot;spatialLIBD&quot;, ## Advanced &quot;variancePartition&quot; ) ) ## Install smokingMouse BiocManager::install(&quot;LieberInstitute/smokingMouse&quot;) You will also need to install RStudio version 2023.06.0+421 or newer. R session information Details on the R version used for making this book. The source code is available at lcolladotor/cshl_rstats_genome_scale_2023. ## Load the package at the top of your script library(&quot;sessioninfo&quot;) ## Utilities library(&quot;BiocFileCache&quot;) library(&quot;BiocStyle&quot;) library(&quot;biocthis&quot;) library(&quot;here&quot;) library(&quot;lobstr&quot;) library(&quot;postcards&quot;) library(&quot;usethis&quot;) library(&quot;sessioninfo&quot;) ## Data library(&quot;smokingMouse&quot;) ## Main containers / vis library(&quot;SummarizedExperiment&quot;) library(&quot;iSEE&quot;) ## RNA-seq library(&quot;edgeR&quot;) library(&quot;ExploreModelMatrix&quot;) library(&quot;limma&quot;) library(&quot;recount3&quot;) ## QCA library(&quot;scater&quot;) ## Variance Partition library(&quot;variancePartition&quot;) ## Visualization: plots &amp; text library(&quot;ComplexHeatmap&quot;) library(&quot;ggplot2&quot;) library(&quot;patchwork&quot;) library(&quot;pheatmap&quot;) library(&quot;RColorBrewer&quot;) library(&quot;Hmisc&quot;) library(&quot;stringr&quot;) library(&quot;cowplot&quot;) library(&quot;rlang&quot;) library(&quot;ggrepel&quot;) ## Advanced library(&quot;spatialLIBD&quot;) ## Reproducibility information options(width = 120) session_info() ## ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────── ## setting value ## version R version 4.3.0 (2023-04-21) ## os Ubuntu 22.04.2 LTS ## system x86_64, linux-gnu ## ui X11 ## language (EN) ## collate en_US.UTF-8 ## ctype en_US.UTF-8 ## tz UTC ## date 2023-06-28 ## pandoc 2.19.2 @ /usr/local/bin/ (via rmarkdown) ## ## ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────── ## package * version date (UTC) lib source ## AnnotationDbi 1.62.1 2023-05-02 [1] Bioconductor ## AnnotationHub 3.8.0 2023-04-25 [1] Bioconductor ## aod 1.3.2 2022-04-02 [1] RSPM (R 4.3.0) ## attempt 0.3.1 2020-05-03 [1] RSPM (R 4.3.0) ## backports 1.4.1 2021-12-13 [1] RSPM (R 4.3.0) ## base64enc 0.1-3 2015-07-28 [2] RSPM (R 4.3.0) ## beachmat 2.16.0 2023-04-25 [1] Bioconductor ## beeswarm 0.4.0 2021-06-01 [1] RSPM (R 4.3.0) ## benchmarkme 1.0.8 2022-06-12 [1] RSPM (R 4.3.0) ## benchmarkmeData 1.0.4 2020-04-23 [1] RSPM (R 4.3.0) ## Biobase * 2.60.0 2023-04-25 [1] Bioconductor ## BiocFileCache * 2.8.0 2023-04-25 [1] Bioconductor ## BiocGenerics * 0.46.0 2023-04-25 [1] Bioconductor ## BiocIO 1.10.0 2023-04-25 [1] Bioconductor ## BiocManager 1.30.21 2023-06-10 [1] RSPM (R 4.3.0) ## BiocNeighbors 1.18.0 2023-04-25 [1] Bioconductor ## BiocParallel * 1.34.2 2023-05-22 [1] Bioconductor ## BiocSingular 1.16.0 2023-04-25 [1] Bioconductor ## BiocStyle * 2.28.0 2023-04-25 [1] Bioconductor ## biocthis * 1.10.3 2023-06-07 [1] Bioconductor ## BiocVersion 3.17.1 2022-11-04 [2] Bioconductor ## Biostrings 2.68.1 2023-05-16 [1] Bioconductor ## bit 4.0.5 2022-11-15 [1] RSPM (R 4.3.0) ## bit64 4.0.5 2020-08-30 [1] RSPM (R 4.3.0) ## bitops 1.0-7 2021-04-24 [1] RSPM (R 4.3.0) ## blob 1.2.4 2023-03-17 [1] RSPM (R 4.3.0) ## bookdown 0.34 2023-05-09 [1] RSPM (R 4.3.0) ## boot 1.3-28.1 2022-11-22 [3] CRAN (R 4.3.0) ## broom 1.0.5 2023-06-09 [1] RSPM (R 4.3.0) ## bslib 0.5.0 2023-06-09 [2] RSPM (R 4.3.0) ## cachem 1.0.8 2023-05-01 [2] RSPM (R 4.3.0) ## caTools 1.18.2 2021-03-28 [1] RSPM (R 4.3.0) ## checkmate 2.2.0 2023-04-27 [1] RSPM (R 4.3.0) ## circlize 0.4.15 2022-05-10 [1] RSPM (R 4.3.0) ## cli 3.6.1 2023-03-23 [2] RSPM (R 4.3.0) ## clue 0.3-64 2023-01-31 [1] RSPM (R 4.3.0) ## cluster 2.1.4 2022-08-22 [3] CRAN (R 4.3.0) ## codetools 0.2-19 2023-02-01 [3] CRAN (R 4.3.0) ## colorspace 2.1-0 2023-01-23 [1] RSPM (R 4.3.0) ## colourpicker 1.2.0 2022-10-28 [1] RSPM (R 4.3.0) ## ComplexHeatmap * 2.16.0 2023-04-25 [1] Bioconductor ## config 0.3.1 2020-12-17 [1] RSPM (R 4.3.0) ## cowplot * 1.1.1 2020-12-30 [1] RSPM (R 4.3.0) ## crayon 1.5.2 2022-09-29 [2] RSPM (R 4.3.0) ## curl 5.0.1 2023-06-07 [2] RSPM (R 4.3.0) ## data.table 1.14.8 2023-02-17 [1] RSPM (R 4.3.0) ## DBI 1.1.3 2022-06-18 [1] RSPM (R 4.3.0) ## dbplyr * 2.3.2 2023-03-21 [1] RSPM (R 4.3.0) ## DelayedArray 0.26.3 2023-05-22 [1] Bioconductor ## DelayedMatrixStats 1.22.1 2023-06-09 [1] Bioconductor ## digest 0.6.32 2023-06-26 [2] RSPM (R 4.3.0) ## doParallel 1.0.17 2022-02-07 [1] RSPM (R 4.3.0) ## dotCall64 1.0-2 2022-10-03 [1] RSPM (R 4.3.0) ## dplyr 1.1.2 2023-04-20 [1] RSPM (R 4.3.0) ## dqrng 0.3.0 2021-05-01 [1] RSPM (R 4.3.0) ## DropletUtils 1.20.0 2023-04-25 [1] Bioconductor ## DT 0.28 2023-05-18 [1] RSPM (R 4.3.0) ## edgeR * 3.42.4 2023-05-31 [1] Bioconductor ## ellipsis 0.3.2 2021-04-29 [2] RSPM (R 4.3.0) ## EnvStats 2.7.0 2022-03-07 [1] RSPM (R 4.3.0) ## evaluate 0.21 2023-05-05 [2] RSPM (R 4.3.0) ## ExperimentHub 2.8.0 2023-04-25 [1] Bioconductor ## ExploreModelMatrix * 1.12.0 2023-04-25 [1] Bioconductor ## fansi 1.0.4 2023-01-22 [2] RSPM (R 4.3.0) ## fastmap 1.1.1 2023-02-24 [2] RSPM (R 4.3.0) ## fields 14.1 2022-08-12 [1] RSPM (R 4.3.0) ## filelock 1.0.2 2018-10-05 [1] RSPM (R 4.3.0) ## foreach 1.5.2 2022-02-02 [1] RSPM (R 4.3.0) ## foreign 0.8-84 2022-12-06 [3] CRAN (R 4.3.0) ## Formula 1.2-5 2023-02-24 [1] RSPM (R 4.3.0) ## fs 1.6.2 2023-04-25 [2] RSPM (R 4.3.0) ## generics 0.1.3 2022-07-05 [1] RSPM (R 4.3.0) ## GenomeInfoDb * 1.36.1 2023-06-21 [1] Bioconductor ## GenomeInfoDbData 1.2.10 2023-05-17 [1] Bioconductor ## GenomicAlignments 1.36.0 2023-04-25 [1] Bioconductor ## GenomicRanges * 1.52.0 2023-04-25 [1] Bioconductor ## GetoptLong 1.0.5 2020-12-15 [1] RSPM (R 4.3.0) ## ggbeeswarm 0.7.2 2023-04-29 [1] RSPM (R 4.3.0) ## ggplot2 * 3.4.2 2023-04-03 [1] RSPM (R 4.3.0) ## ggrepel * 0.9.3 2023-02-03 [1] RSPM (R 4.3.0) ## GlobalOptions 0.1.2 2020-06-10 [1] RSPM (R 4.3.0) ## glue 1.6.2 2022-02-24 [2] RSPM (R 4.3.0) ## golem 0.4.1 2023-06-05 [1] RSPM (R 4.3.0) ## gplots 3.1.3 2022-04-25 [1] RSPM (R 4.3.0) ## gridExtra 2.3 2017-09-09 [1] RSPM (R 4.3.0) ## gtable 0.3.3 2023-03-21 [1] RSPM (R 4.3.0) ## gtools 3.9.4 2022-11-27 [1] RSPM (R 4.3.0) ## HDF5Array 1.28.1 2023-05-01 [1] Bioconductor ## here * 1.0.1 2020-12-13 [1] RSPM (R 4.3.0) ## Hmisc * 5.1-0 2023-05-08 [1] RSPM (R 4.3.0) ## hms 1.1.3 2023-03-21 [1] RSPM (R 4.3.0) ## htmlTable 2.4.1 2022-07-07 [1] RSPM (R 4.3.0) ## htmltools 0.5.5 2023-03-23 [2] RSPM (R 4.3.0) ## htmlwidgets 1.6.2 2023-03-17 [2] RSPM (R 4.3.0) ## httpuv 1.6.11 2023-05-11 [2] RSPM (R 4.3.0) ## httr 1.4.6 2023-05-08 [2] RSPM (R 4.3.0) ## igraph 1.5.0 2023-06-16 [1] RSPM (R 4.3.0) ## interactiveDisplayBase 1.38.0 2023-04-25 [1] Bioconductor ## IRanges * 2.34.1 2023-06-22 [1] Bioconductor ## irlba 2.3.5.1 2022-10-03 [1] RSPM (R 4.3.0) ## iSEE * 2.12.0 2023-04-25 [1] Bioconductor ## iterators 1.0.14 2022-02-05 [1] RSPM (R 4.3.0) ## jquerylib 0.1.4 2021-04-26 [2] RSPM (R 4.3.0) ## jsonlite 1.8.5 2023-06-05 [2] RSPM (R 4.3.0) ## KEGGREST 1.40.0 2023-04-25 [1] Bioconductor ## KernSmooth 2.23-21 2023-05-03 [3] RSPM (R 4.3.0) ## knitr 1.43 2023-05-25 [2] RSPM (R 4.3.0) ## later 1.3.1 2023-05-02 [2] RSPM (R 4.3.0) ## lattice 0.21-8 2023-04-05 [3] CRAN (R 4.3.0) ## lazyeval 0.2.2 2019-03-15 [1] RSPM (R 4.3.0) ## lifecycle 1.0.3 2022-10-07 [2] RSPM (R 4.3.0) ## limma * 3.56.2 2023-06-04 [1] Bioconductor ## lme4 1.1-33 2023-04-25 [1] RSPM (R 4.3.0) ## lobstr * 1.1.2 2022-06-22 [1] RSPM (R 4.3.0) ## locfit 1.5-9.8 2023-06-11 [1] RSPM (R 4.3.0) ## magick 2.7.4 2023-03-09 [1] RSPM (R 4.3.0) ## magrittr 2.0.3 2022-03-30 [2] RSPM (R 4.3.0) ## maps 3.4.1 2022-10-30 [1] RSPM (R 4.3.0) ## MASS 7.3-60 2023-05-04 [3] RSPM (R 4.3.0) ## Matrix 1.5-4.1 2023-05-18 [3] RSPM (R 4.3.0) ## MatrixGenerics * 1.12.2 2023-06-09 [1] Bioconductor ## matrixStats * 1.0.0 2023-06-02 [1] RSPM (R 4.3.0) ## memoise 2.0.1 2021-11-26 [2] RSPM (R 4.3.0) ## mgcv 1.8-42 2023-03-02 [3] CRAN (R 4.3.0) ## mime 0.12 2021-09-28 [2] RSPM (R 4.3.0) ## miniUI 0.1.1.1 2018-05-18 [2] RSPM (R 4.3.0) ## minqa 1.2.5 2022-10-19 [1] RSPM (R 4.3.0) ## munsell 0.5.0 2018-06-12 [1] RSPM (R 4.3.0) ## mvtnorm 1.2-2 2023-06-08 [1] RSPM (R 4.3.0) ## nlme 3.1-162 2023-01-31 [3] CRAN (R 4.3.0) ## nloptr 2.0.3 2022-05-26 [1] RSPM (R 4.3.0) ## nnet 7.3-19 2023-05-03 [3] RSPM (R 4.3.0) ## paletteer 1.5.0 2022-10-19 [1] RSPM (R 4.3.0) ## patchwork * 1.1.2 2022-08-19 [1] RSPM (R 4.3.0) ## pbkrtest 0.5.2 2023-01-19 [1] RSPM (R 4.3.0) ## pheatmap * 1.0.12 2019-01-04 [1] RSPM (R 4.3.0) ## pillar 1.9.0 2023-03-22 [2] RSPM (R 4.3.0) ## pkgconfig 2.0.3 2019-09-22 [2] RSPM (R 4.3.0) ## plotly 4.10.2 2023-06-03 [1] RSPM (R 4.3.0) ## plyr 1.8.8 2022-11-11 [1] RSPM (R 4.3.0) ## png 0.1-8 2022-11-29 [1] RSPM (R 4.3.0) ## postcards * 0.2.3 2022-01-07 [1] RSPM (R 4.3.0) ## prettyunits 1.1.1 2020-01-24 [2] RSPM (R 4.3.0) ## progress 1.2.2 2019-05-16 [1] RSPM (R 4.3.0) ## promises 1.2.0.1 2021-02-11 [2] RSPM (R 4.3.0) ## purrr 1.0.1 2023-01-10 [2] RSPM (R 4.3.0) ## R.cache 0.16.0 2022-07-21 [1] RSPM (R 4.3.0) ## R.methodsS3 1.8.2 2022-06-13 [1] RSPM (R 4.3.0) ## R.oo 1.25.0 2022-06-12 [1] RSPM (R 4.3.0) ## R.utils 2.12.2 2022-11-11 [1] RSPM (R 4.3.0) ## R6 2.5.1 2021-08-19 [2] RSPM (R 4.3.0) ## rappdirs 0.3.3 2021-01-31 [2] RSPM (R 4.3.0) ## rbibutils 2.2.13 2023-01-13 [1] RSPM (R 4.3.0) ## RColorBrewer * 1.1-3 2022-04-03 [1] RSPM (R 4.3.0) ## Rcpp 1.0.10 2023-01-22 [2] RSPM (R 4.3.0) ## RCurl 1.98-1.12 2023-03-27 [1] RSPM (R 4.3.0) ## Rdpack 2.4 2022-07-20 [1] RSPM (R 4.3.0) ## recount3 * 1.10.2 2023-05-07 [1] Bioconductor ## remaCor 0.0.16 2023-06-21 [1] RSPM (R 4.3.0) ## rematch2 2.1.2 2020-05-01 [2] RSPM (R 4.3.0) ## reshape2 1.4.4 2020-04-09 [1] RSPM (R 4.3.0) ## restfulr 0.0.15 2022-06-16 [1] RSPM (R 4.3.0) ## rhdf5 2.44.0 2023-04-25 [1] Bioconductor ## rhdf5filters 1.12.1 2023-04-30 [1] Bioconductor ## Rhdf5lib 1.22.0 2023-04-25 [1] Bioconductor ## RhpcBLASctl 0.23-42 2023-02-11 [1] RSPM (R 4.3.0) ## rintrojs 0.3.2 2022-08-09 [1] RSPM (R 4.3.0) ## rjson 0.2.21 2022-01-09 [1] RSPM (R 4.3.0) ## rlang * 1.1.1 2023-04-28 [2] RSPM (R 4.3.0) ## rmarkdown 2.22 2023-06-01 [2] RSPM (R 4.3.0) ## rpart 4.1.19 2022-10-21 [3] CRAN (R 4.3.0) ## rprojroot 2.0.3 2022-04-02 [2] RSPM (R 4.3.0) ## Rsamtools 2.16.0 2023-04-25 [1] Bioconductor ## RSQLite 2.3.1 2023-04-03 [1] RSPM (R 4.3.0) ## rstudioapi 0.14 2022-08-22 [2] RSPM (R 4.3.0) ## rsvd 1.0.5 2021-04-16 [1] RSPM (R 4.3.0) ## rtracklayer 1.60.0 2023-04-25 [1] Bioconductor ## S4Arrays 1.0.4 2023-05-14 [1] Bioconductor ## S4Vectors * 0.38.1 2023-05-02 [1] Bioconductor ## sass 0.4.6 2023-05-03 [2] RSPM (R 4.3.0) ## ScaledMatrix 1.8.1 2023-05-03 [1] Bioconductor ## scales 1.2.1 2022-08-20 [1] RSPM (R 4.3.0) ## scater * 1.28.0 2023-04-25 [1] Bioconductor ## scuttle * 1.10.1 2023-05-02 [1] Bioconductor ## sessioninfo * 1.2.2 2021-12-06 [2] RSPM (R 4.3.0) ## shape 1.4.6 2021-05-19 [1] RSPM (R 4.3.0) ## shiny 1.7.4 2022-12-15 [2] RSPM (R 4.3.0) ## shinyAce 0.4.2 2022-05-06 [1] RSPM (R 4.3.0) ## shinydashboard 0.7.2 2021-09-30 [1] RSPM (R 4.3.0) ## shinyjs 2.1.0 2021-12-23 [1] RSPM (R 4.3.0) ## shinyWidgets 0.7.6 2023-01-08 [1] RSPM (R 4.3.0) ## SingleCellExperiment * 1.22.0 2023-04-25 [1] Bioconductor ## smokingMouse * 0.99.5 2023-06-28 [1] Github (LieberInstitute/smokingMouse@2e7640c) ## spam 2.9-1 2022-08-07 [1] RSPM (R 4.3.0) ## sparseMatrixStats 1.12.1 2023-06-20 [1] Bioconductor ## SpatialExperiment * 1.10.0 2023-04-25 [1] Bioconductor ## spatialLIBD * 1.12.0 2023-04-27 [1] Bioconductor ## statmod 1.5.0 2023-01-06 [1] RSPM (R 4.3.0) ## stringi 1.7.12 2023-01-11 [2] RSPM (R 4.3.0) ## stringr * 1.5.0 2022-12-02 [2] RSPM (R 4.3.0) ## styler 1.10.1 2023-06-05 [1] RSPM (R 4.3.0) ## SummarizedExperiment * 1.30.2 2023-06-06 [1] Bioconductor ## tibble 3.2.1 2023-03-20 [2] RSPM (R 4.3.0) ## tidyr 1.3.0 2023-01-24 [1] RSPM (R 4.3.0) ## tidyselect 1.2.0 2022-10-10 [1] RSPM (R 4.3.0) ## usethis * 2.2.1 2023-06-23 [2] RSPM (R 4.3.0) ## utf8 1.2.3 2023-01-31 [2] RSPM (R 4.3.0) ## variancePartition * 1.30.2 2023-06-07 [1] Bioconductor ## vctrs 0.6.3 2023-06-14 [2] RSPM (R 4.3.0) ## vipor 0.4.5 2017-03-22 [1] RSPM (R 4.3.0) ## viridis 0.6.3 2023-05-03 [1] RSPM (R 4.3.0) ## viridisLite 0.4.2 2023-05-02 [1] RSPM (R 4.3.0) ## withr 2.5.0 2022-03-03 [2] RSPM (R 4.3.0) ## xfun 0.39 2023-04-20 [2] RSPM (R 4.3.0) ## XML 3.99-0.14 2023-03-19 [1] RSPM (R 4.3.0) ## xtable 1.8-4 2019-04-21 [2] RSPM (R 4.3.0) ## XVector 0.40.0 2023-04-25 [1] Bioconductor ## yaml 2.3.7 2023-01-23 [2] RSPM (R 4.3.0) ## zlibbioc 1.46.0 2023-04-25 [1] Bioconductor ## ## [1] /__w/_temp/Library ## [2] /usr/local/lib/R/site-library ## [3] /usr/local/lib/R/library ## ## ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── proc.time() ## user system elapsed ## 14.038 0.640 14.692 This book was last updated at 2023-06-28 14:19:49.837609. License This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. "],["speaqeasy-introduction.html", "1 SPEAQeasy introduction", " 1 SPEAQeasy introduction Instructor: Leo "],["smokingmouse-study.html", "2 smokingMouse study 2.1 Introduction 2.2 Overview 2.3 Goals 2.4 Study design", " 2 smokingMouse study Instructor: Daianna As part of your training, we’ll guide you through an analysis with real bulk RNA-seq data. The dataset that we’ll be using is a RangedSummarizedExperiment coming from the smokingMouse (Gonzalez-Padilla and Collado-Torres, 2023) package, but in this chapter we’ll explain you the study design and the experimental stages that preceded the data generation. The smoking mouse study is a project currently being developed at the Lieber Institute for Brain Development by Daianna Gonzalez-Padilla and Leonardo Collado-Torres. 2.1 Introduction Nowadays, maternal smoking during pregnancy (MSDP) is one of the major health concerns worldwide not only because of the effects on the smoker but because the health of the offspring could be dramatically affected by smoking exposure, particularly their cognitive and behavioral traits. But are those effects caused by cigarette smoke only? Or are those alterations given by a specific component of cigarettes such as nicotine? The latter is a very relevant question because most of the studies have focused on analyzing smoking effects, ignoring the role of nicotine, an active component of the cigarettes. Understanding which effects are specifically dictated by nicotine prenatal exposure will enable more directed studies of this drug on the developing brain, once affected genes have been identified and experimentally proven. 2.2 Overview This study consisted of a series of bulk RNA-sequencing experiments performed on brain samples from adult mice and pups and on blood samples from adults. Adult mice were either exposed to cigarette smoke (what we call smoking experiment and smoking mice) or controls of the smoking experiment, or they were administered nicotine (nicotine experiment and nicotine mice) or controls of the nicotine experiment, and they were either pregnant or not. Smoking, nicotine and control pups are pups that were born to smoking, nicotine and control pregnant mice, respectively. This experimental design allowed us to contrast the altered features in both conditions and to compare the effects in different mouse ages, sexes, tissues and pregnancy states. The original datasets contain gene, transcript, exon and junction expression levels across 208 samples, but in this course we’ll only use gene data in nicotine samples to simplify the analyses. 2.3 Goals This project actually aimed to answer 4 questions, all related to smoking and nicotine effects in mouse. 2.3.1 Main objective The main goal was to identify and differentiate the effects of prenatal nicotine and smoking exposures on gene, transcript, exon and junction expression of developing brain of pups. Basically, to perform a differential expression analysis on mouse data to find significant feature expression changes. 2.3.2 Secondary objectives To evaluate the affected genes by each substance on adult brain in order to compare pup and adult results. To examine the effects of smoking on adult blood and brain to search for overlapping biomarkers in both tissues (Can blood analyses capture environmental effects on brain?) To compare mouse differentially expressed genes (DEGs) with results from previous studies in human (Semick, S.A. et al. (2018) and Toikumo, S. et al. (2023)). Check here for the code of the original and complete analyses done. 2.4 Study design As presented in Figure 1: A), 36 pregnant dams and 35 non-pregnant female adult mice were either administered nicotine by intraperitoneal injection (IP; n=12), exposed to cigarette smoke in smoking chambers (n=24), or controls (n=35; 11 nicotine controls and 24 smoking controls). A total of 137 pups were born to pregnant dams: 19 were born to mice that were administered nicotine, 46 to mice exposed to cigarette smoke and the remaining 72 to control mice (23 to nicotine controls and 49 to smoking controls). Samples from frontal cortices of P0 pups and adults were obtained, as well as blood samples from smoking-exposed and smoking control adults. Then, as shown in B) RNA was extracted from all those samples and RNA-seq libraries were prepared and sequenced to obtain expression counts for genes, exons, transcripts and exon-exon junctions. Figure 1: Experimental design of the study. #&gt; ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────── #&gt; setting value #&gt; version R version 4.3.0 (2023-04-21) #&gt; os Ubuntu 22.04.2 LTS #&gt; system x86_64, linux-gnu #&gt; ui X11 #&gt; language (EN) #&gt; collate en_US.UTF-8 #&gt; ctype en_US.UTF-8 #&gt; tz UTC #&gt; date 2023-06-28 #&gt; pandoc 2.19.2 @ /usr/local/bin/ (via rmarkdown) #&gt; #&gt; ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────── #&gt; package * version date (UTC) lib source #&gt; AnnotationDbi 1.62.1 2023-05-02 [1] Bioconductor #&gt; AnnotationHub 3.8.0 2023-04-25 [1] Bioconductor #&gt; aod 1.3.2 2022-04-02 [1] RSPM (R 4.3.0) #&gt; attempt 0.3.1 2020-05-03 [1] RSPM (R 4.3.0) #&gt; backports 1.4.1 2021-12-13 [1] RSPM (R 4.3.0) #&gt; base64enc 0.1-3 2015-07-28 [2] RSPM (R 4.3.0) #&gt; beachmat 2.16.0 2023-04-25 [1] Bioconductor #&gt; beeswarm 0.4.0 2021-06-01 [1] RSPM (R 4.3.0) #&gt; benchmarkme 1.0.8 2022-06-12 [1] RSPM (R 4.3.0) #&gt; benchmarkmeData 1.0.4 2020-04-23 [1] RSPM (R 4.3.0) #&gt; bibtex 0.5.1 2023-01-26 [1] RSPM (R 4.3.0) #&gt; Biobase * 2.60.0 2023-04-25 [1] Bioconductor #&gt; BiocFileCache * 2.8.0 2023-04-25 [1] Bioconductor #&gt; BiocGenerics * 0.46.0 2023-04-25 [1] Bioconductor #&gt; BiocIO 1.10.0 2023-04-25 [1] Bioconductor #&gt; BiocManager 1.30.21 2023-06-10 [1] RSPM (R 4.3.0) #&gt; BiocNeighbors 1.18.0 2023-04-25 [1] Bioconductor #&gt; BiocParallel * 1.34.2 2023-05-22 [1] Bioconductor #&gt; BiocSingular 1.16.0 2023-04-25 [1] Bioconductor #&gt; BiocStyle * 2.28.0 2023-04-25 [1] Bioconductor #&gt; biocthis * 1.10.3 2023-06-07 [1] Bioconductor #&gt; BiocVersion 3.17.1 2022-11-04 [2] Bioconductor #&gt; Biostrings 2.68.1 2023-05-16 [1] Bioconductor #&gt; bit 4.0.5 2022-11-15 [1] RSPM (R 4.3.0) #&gt; bit64 4.0.5 2020-08-30 [1] RSPM (R 4.3.0) #&gt; bitops 1.0-7 2021-04-24 [1] RSPM (R 4.3.0) #&gt; blob 1.2.4 2023-03-17 [1] RSPM (R 4.3.0) #&gt; bookdown 0.34 2023-05-09 [1] RSPM (R 4.3.0) #&gt; boot 1.3-28.1 2022-11-22 [3] CRAN (R 4.3.0) #&gt; broom 1.0.5 2023-06-09 [1] RSPM (R 4.3.0) #&gt; bslib 0.5.0 2023-06-09 [2] RSPM (R 4.3.0) #&gt; cachem 1.0.8 2023-05-01 [2] RSPM (R 4.3.0) #&gt; caTools 1.18.2 2021-03-28 [1] RSPM (R 4.3.0) #&gt; checkmate 2.2.0 2023-04-27 [1] RSPM (R 4.3.0) #&gt; circlize 0.4.15 2022-05-10 [1] RSPM (R 4.3.0) #&gt; cli 3.6.1 2023-03-23 [2] RSPM (R 4.3.0) #&gt; clue 0.3-64 2023-01-31 [1] RSPM (R 4.3.0) #&gt; cluster 2.1.4 2022-08-22 [3] CRAN (R 4.3.0) #&gt; codetools 0.2-19 2023-02-01 [3] CRAN (R 4.3.0) #&gt; colorspace 2.1-0 2023-01-23 [1] RSPM (R 4.3.0) #&gt; colourpicker 1.2.0 2022-10-28 [1] RSPM (R 4.3.0) #&gt; ComplexHeatmap * 2.16.0 2023-04-25 [1] Bioconductor #&gt; config 0.3.1 2020-12-17 [1] RSPM (R 4.3.0) #&gt; cowplot * 1.1.1 2020-12-30 [1] RSPM (R 4.3.0) #&gt; crayon 1.5.2 2022-09-29 [2] RSPM (R 4.3.0) #&gt; curl 5.0.1 2023-06-07 [2] RSPM (R 4.3.0) #&gt; data.table 1.14.8 2023-02-17 [1] RSPM (R 4.3.0) #&gt; DBI 1.1.3 2022-06-18 [1] RSPM (R 4.3.0) #&gt; dbplyr * 2.3.2 2023-03-21 [1] RSPM (R 4.3.0) #&gt; DelayedArray 0.26.3 2023-05-22 [1] Bioconductor #&gt; DelayedMatrixStats 1.22.1 2023-06-09 [1] Bioconductor #&gt; digest 0.6.32 2023-06-26 [2] RSPM (R 4.3.0) #&gt; doParallel 1.0.17 2022-02-07 [1] RSPM (R 4.3.0) #&gt; dotCall64 1.0-2 2022-10-03 [1] RSPM (R 4.3.0) #&gt; dplyr 1.1.2 2023-04-20 [1] RSPM (R 4.3.0) #&gt; dqrng 0.3.0 2021-05-01 [1] RSPM (R 4.3.0) #&gt; DropletUtils 1.20.0 2023-04-25 [1] Bioconductor #&gt; DT 0.28 2023-05-18 [1] RSPM (R 4.3.0) #&gt; edgeR * 3.42.4 2023-05-31 [1] Bioconductor #&gt; ellipsis 0.3.2 2021-04-29 [2] RSPM (R 4.3.0) #&gt; EnvStats 2.7.0 2022-03-07 [1] RSPM (R 4.3.0) #&gt; evaluate 0.21 2023-05-05 [2] RSPM (R 4.3.0) #&gt; ExperimentHub 2.8.0 2023-04-25 [1] Bioconductor #&gt; ExploreModelMatrix * 1.12.0 2023-04-25 [1] Bioconductor #&gt; fansi 1.0.4 2023-01-22 [2] RSPM (R 4.3.0) #&gt; fastmap 1.1.1 2023-02-24 [2] RSPM (R 4.3.0) #&gt; fields 14.1 2022-08-12 [1] RSPM (R 4.3.0) #&gt; filelock 1.0.2 2018-10-05 [1] RSPM (R 4.3.0) #&gt; foreach 1.5.2 2022-02-02 [1] RSPM (R 4.3.0) #&gt; foreign 0.8-84 2022-12-06 [3] CRAN (R 4.3.0) #&gt; Formula 1.2-5 2023-02-24 [1] RSPM (R 4.3.0) #&gt; fs 1.6.2 2023-04-25 [2] RSPM (R 4.3.0) #&gt; generics 0.1.3 2022-07-05 [1] RSPM (R 4.3.0) #&gt; GenomeInfoDb * 1.36.1 2023-06-21 [1] Bioconductor #&gt; GenomeInfoDbData 1.2.10 2023-05-17 [1] Bioconductor #&gt; GenomicAlignments 1.36.0 2023-04-25 [1] Bioconductor #&gt; GenomicRanges * 1.52.0 2023-04-25 [1] Bioconductor #&gt; GetoptLong 1.0.5 2020-12-15 [1] RSPM (R 4.3.0) #&gt; ggbeeswarm 0.7.2 2023-04-29 [1] RSPM (R 4.3.0) #&gt; ggplot2 * 3.4.2 2023-04-03 [1] RSPM (R 4.3.0) #&gt; ggrepel * 0.9.3 2023-02-03 [1] RSPM (R 4.3.0) #&gt; GlobalOptions 0.1.2 2020-06-10 [1] RSPM (R 4.3.0) #&gt; glue 1.6.2 2022-02-24 [2] RSPM (R 4.3.0) #&gt; golem 0.4.1 2023-06-05 [1] RSPM (R 4.3.0) #&gt; gplots 3.1.3 2022-04-25 [1] RSPM (R 4.3.0) #&gt; gridExtra 2.3 2017-09-09 [1] RSPM (R 4.3.0) #&gt; gtable 0.3.3 2023-03-21 [1] RSPM (R 4.3.0) #&gt; gtools 3.9.4 2022-11-27 [1] RSPM (R 4.3.0) #&gt; HDF5Array 1.28.1 2023-05-01 [1] Bioconductor #&gt; here * 1.0.1 2020-12-13 [1] RSPM (R 4.3.0) #&gt; Hmisc * 5.1-0 2023-05-08 [1] RSPM (R 4.3.0) #&gt; hms 1.1.3 2023-03-21 [1] RSPM (R 4.3.0) #&gt; htmlTable 2.4.1 2022-07-07 [1] RSPM (R 4.3.0) #&gt; htmltools 0.5.5 2023-03-23 [2] RSPM (R 4.3.0) #&gt; htmlwidgets 1.6.2 2023-03-17 [2] RSPM (R 4.3.0) #&gt; httpuv 1.6.11 2023-05-11 [2] RSPM (R 4.3.0) #&gt; httr 1.4.6 2023-05-08 [2] RSPM (R 4.3.0) #&gt; igraph 1.5.0 2023-06-16 [1] RSPM (R 4.3.0) #&gt; interactiveDisplayBase 1.38.0 2023-04-25 [1] Bioconductor #&gt; IRanges * 2.34.1 2023-06-22 [1] Bioconductor #&gt; irlba 2.3.5.1 2022-10-03 [1] RSPM (R 4.3.0) #&gt; iSEE * 2.12.0 2023-04-25 [1] Bioconductor #&gt; iterators 1.0.14 2022-02-05 [1] RSPM (R 4.3.0) #&gt; jquerylib 0.1.4 2021-04-26 [2] RSPM (R 4.3.0) #&gt; jsonlite 1.8.5 2023-06-05 [2] RSPM (R 4.3.0) #&gt; KEGGREST 1.40.0 2023-04-25 [1] Bioconductor #&gt; KernSmooth 2.23-21 2023-05-03 [3] RSPM (R 4.3.0) #&gt; knitr 1.43 2023-05-25 [2] RSPM (R 4.3.0) #&gt; later 1.3.1 2023-05-02 [2] RSPM (R 4.3.0) #&gt; lattice 0.21-8 2023-04-05 [3] CRAN (R 4.3.0) #&gt; lazyeval 0.2.2 2019-03-15 [1] RSPM (R 4.3.0) #&gt; lifecycle 1.0.3 2022-10-07 [2] RSPM (R 4.3.0) #&gt; limma * 3.56.2 2023-06-04 [1] Bioconductor #&gt; lme4 1.1-33 2023-04-25 [1] RSPM (R 4.3.0) #&gt; lobstr * 1.1.2 2022-06-22 [1] RSPM (R 4.3.0) #&gt; locfit 1.5-9.8 2023-06-11 [1] RSPM (R 4.3.0) #&gt; lubridate 1.9.2 2023-02-10 [1] RSPM (R 4.3.0) #&gt; magick 2.7.4 2023-03-09 [1] RSPM (R 4.3.0) #&gt; magrittr 2.0.3 2022-03-30 [2] RSPM (R 4.3.0) #&gt; maps 3.4.1 2022-10-30 [1] RSPM (R 4.3.0) #&gt; MASS 7.3-60 2023-05-04 [3] RSPM (R 4.3.0) #&gt; Matrix 1.5-4.1 2023-05-18 [3] RSPM (R 4.3.0) #&gt; MatrixGenerics * 1.12.2 2023-06-09 [1] Bioconductor #&gt; matrixStats * 1.0.0 2023-06-02 [1] RSPM (R 4.3.0) #&gt; memoise 2.0.1 2021-11-26 [2] RSPM (R 4.3.0) #&gt; mgcv 1.8-42 2023-03-02 [3] CRAN (R 4.3.0) #&gt; mime 0.12 2021-09-28 [2] RSPM (R 4.3.0) #&gt; miniUI 0.1.1.1 2018-05-18 [2] RSPM (R 4.3.0) #&gt; minqa 1.2.5 2022-10-19 [1] RSPM (R 4.3.0) #&gt; munsell 0.5.0 2018-06-12 [1] RSPM (R 4.3.0) #&gt; mvtnorm 1.2-2 2023-06-08 [1] RSPM (R 4.3.0) #&gt; nlme 3.1-162 2023-01-31 [3] CRAN (R 4.3.0) #&gt; nloptr 2.0.3 2022-05-26 [1] RSPM (R 4.3.0) #&gt; nnet 7.3-19 2023-05-03 [3] RSPM (R 4.3.0) #&gt; paletteer 1.5.0 2022-10-19 [1] RSPM (R 4.3.0) #&gt; patchwork * 1.1.2 2022-08-19 [1] RSPM (R 4.3.0) #&gt; pbkrtest 0.5.2 2023-01-19 [1] RSPM (R 4.3.0) #&gt; pheatmap * 1.0.12 2019-01-04 [1] RSPM (R 4.3.0) #&gt; pillar 1.9.0 2023-03-22 [2] RSPM (R 4.3.0) #&gt; pkgconfig 2.0.3 2019-09-22 [2] RSPM (R 4.3.0) #&gt; plotly 4.10.2 2023-06-03 [1] RSPM (R 4.3.0) #&gt; plyr 1.8.8 2022-11-11 [1] RSPM (R 4.3.0) #&gt; png 0.1-8 2022-11-29 [1] RSPM (R 4.3.0) #&gt; postcards * 0.2.3 2022-01-07 [1] RSPM (R 4.3.0) #&gt; prettyunits 1.1.1 2020-01-24 [2] RSPM (R 4.3.0) #&gt; progress 1.2.2 2019-05-16 [1] RSPM (R 4.3.0) #&gt; promises 1.2.0.1 2021-02-11 [2] RSPM (R 4.3.0) #&gt; purrr 1.0.1 2023-01-10 [2] RSPM (R 4.3.0) #&gt; R.cache 0.16.0 2022-07-21 [1] RSPM (R 4.3.0) #&gt; R.methodsS3 1.8.2 2022-06-13 [1] RSPM (R 4.3.0) #&gt; R.oo 1.25.0 2022-06-12 [1] RSPM (R 4.3.0) #&gt; R.utils 2.12.2 2022-11-11 [1] RSPM (R 4.3.0) #&gt; R6 2.5.1 2021-08-19 [2] RSPM (R 4.3.0) #&gt; rappdirs 0.3.3 2021-01-31 [2] RSPM (R 4.3.0) #&gt; rbibutils 2.2.13 2023-01-13 [1] RSPM (R 4.3.0) #&gt; RColorBrewer * 1.1-3 2022-04-03 [1] RSPM (R 4.3.0) #&gt; Rcpp 1.0.10 2023-01-22 [2] RSPM (R 4.3.0) #&gt; RCurl 1.98-1.12 2023-03-27 [1] RSPM (R 4.3.0) #&gt; Rdpack 2.4 2022-07-20 [1] RSPM (R 4.3.0) #&gt; recount3 * 1.10.2 2023-05-07 [1] Bioconductor #&gt; RefManageR * 1.4.0 2022-09-30 [1] RSPM (R 4.3.0) #&gt; remaCor 0.0.16 2023-06-21 [1] RSPM (R 4.3.0) #&gt; rematch2 2.1.2 2020-05-01 [2] RSPM (R 4.3.0) #&gt; reshape2 1.4.4 2020-04-09 [1] RSPM (R 4.3.0) #&gt; restfulr 0.0.15 2022-06-16 [1] RSPM (R 4.3.0) #&gt; rhdf5 2.44.0 2023-04-25 [1] Bioconductor #&gt; rhdf5filters 1.12.1 2023-04-30 [1] Bioconductor #&gt; Rhdf5lib 1.22.0 2023-04-25 [1] Bioconductor #&gt; RhpcBLASctl 0.23-42 2023-02-11 [1] RSPM (R 4.3.0) #&gt; rintrojs 0.3.2 2022-08-09 [1] RSPM (R 4.3.0) #&gt; rjson 0.2.21 2022-01-09 [1] RSPM (R 4.3.0) #&gt; rlang * 1.1.1 2023-04-28 [2] RSPM (R 4.3.0) #&gt; rmarkdown 2.22 2023-06-01 [2] RSPM (R 4.3.0) #&gt; rpart 4.1.19 2022-10-21 [3] CRAN (R 4.3.0) #&gt; rprojroot 2.0.3 2022-04-02 [2] RSPM (R 4.3.0) #&gt; Rsamtools 2.16.0 2023-04-25 [1] Bioconductor #&gt; RSQLite 2.3.1 2023-04-03 [1] RSPM (R 4.3.0) #&gt; rstudioapi 0.14 2022-08-22 [2] RSPM (R 4.3.0) #&gt; rsvd 1.0.5 2021-04-16 [1] RSPM (R 4.3.0) #&gt; rtracklayer 1.60.0 2023-04-25 [1] Bioconductor #&gt; S4Arrays 1.0.4 2023-05-14 [1] Bioconductor #&gt; S4Vectors * 0.38.1 2023-05-02 [1] Bioconductor #&gt; sass 0.4.6 2023-05-03 [2] RSPM (R 4.3.0) #&gt; ScaledMatrix 1.8.1 2023-05-03 [1] Bioconductor #&gt; scales 1.2.1 2022-08-20 [1] RSPM (R 4.3.0) #&gt; scater * 1.28.0 2023-04-25 [1] Bioconductor #&gt; scuttle * 1.10.1 2023-05-02 [1] Bioconductor #&gt; sessioninfo * 1.2.2 2021-12-06 [2] RSPM (R 4.3.0) #&gt; shape 1.4.6 2021-05-19 [1] RSPM (R 4.3.0) #&gt; shiny 1.7.4 2022-12-15 [2] RSPM (R 4.3.0) #&gt; shinyAce 0.4.2 2022-05-06 [1] RSPM (R 4.3.0) #&gt; shinydashboard 0.7.2 2021-09-30 [1] RSPM (R 4.3.0) #&gt; shinyjs 2.1.0 2021-12-23 [1] RSPM (R 4.3.0) #&gt; shinyWidgets 0.7.6 2023-01-08 [1] RSPM (R 4.3.0) #&gt; SingleCellExperiment * 1.22.0 2023-04-25 [1] Bioconductor #&gt; smokingMouse * 0.99.5 2023-06-28 [1] Github (LieberInstitute/smokingMouse@2e7640c) #&gt; spam 2.9-1 2022-08-07 [1] RSPM (R 4.3.0) #&gt; sparseMatrixStats 1.12.1 2023-06-20 [1] Bioconductor #&gt; SpatialExperiment * 1.10.0 2023-04-25 [1] Bioconductor #&gt; spatialLIBD * 1.12.0 2023-04-27 [1] Bioconductor #&gt; statmod 1.5.0 2023-01-06 [1] RSPM (R 4.3.0) #&gt; stringi 1.7.12 2023-01-11 [2] RSPM (R 4.3.0) #&gt; stringr * 1.5.0 2022-12-02 [2] RSPM (R 4.3.0) #&gt; styler 1.10.1 2023-06-05 [1] RSPM (R 4.3.0) #&gt; SummarizedExperiment * 1.30.2 2023-06-06 [1] Bioconductor #&gt; tibble 3.2.1 2023-03-20 [2] RSPM (R 4.3.0) #&gt; tidyr 1.3.0 2023-01-24 [1] RSPM (R 4.3.0) #&gt; tidyselect 1.2.0 2022-10-10 [1] RSPM (R 4.3.0) #&gt; timechange 0.2.0 2023-01-11 [1] RSPM (R 4.3.0) #&gt; usethis * 2.2.1 2023-06-23 [2] RSPM (R 4.3.0) #&gt; utf8 1.2.3 2023-01-31 [2] RSPM (R 4.3.0) #&gt; variancePartition * 1.30.2 2023-06-07 [1] Bioconductor #&gt; vctrs 0.6.3 2023-06-14 [2] RSPM (R 4.3.0) #&gt; vipor 0.4.5 2017-03-22 [1] RSPM (R 4.3.0) #&gt; viridis 0.6.3 2023-05-03 [1] RSPM (R 4.3.0) #&gt; viridisLite 0.4.2 2023-05-02 [1] RSPM (R 4.3.0) #&gt; withr 2.5.0 2022-03-03 [2] RSPM (R 4.3.0) #&gt; xfun 0.39 2023-04-20 [2] RSPM (R 4.3.0) #&gt; XML 3.99-0.14 2023-03-19 [1] RSPM (R 4.3.0) #&gt; xml2 1.3.4 2023-04-27 [2] RSPM (R 4.3.0) #&gt; xtable 1.8-4 2019-04-21 [2] RSPM (R 4.3.0) #&gt; XVector 0.40.0 2023-04-25 [1] Bioconductor #&gt; yaml 2.3.7 2023-01-23 [2] RSPM (R 4.3.0) #&gt; zlibbioc 1.46.0 2023-04-25 [1] Bioconductor #&gt; #&gt; [1] /__w/_temp/Library #&gt; [2] /usr/local/lib/R/site-library #&gt; [3] /usr/local/lib/R/library #&gt; #&gt; ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── "],["summarizedexperiment-review.html", "3 SummarizedExperiment review", " 3 SummarizedExperiment review Instructor: Renee "],["smokingmouse-rse.html", "4 smokingMouse RSE 4.1 Download data 4.2 Data overview", " 4 smokingMouse RSE Instructor: Daianna Once you have reviewed how to use RangedSummarizedExperiment (RSE) objects in R, now we’ll start exploring the smokingMouse data. As previously described, the smoking mouse project is a complex study with more than 200 samples from brain and blood, adult mice and pups, pregnant and not pregnant mice, etc. The whole datasets of this project can be downloaded from the smokingMouse (Gonzalez-Padilla and Collado-Torres, 2023) package. Visit here for more details. 4.1 Download data For illustrative purposes, we’ll use nicotine data at the gene level which reside in a RangedSummarizedExperiment (RSE) object called rse_gene. We’ll use BiocFileCache to keep the data in a local cache in case we want to run this example again and don’t want to re-download the data from the web. ## Download and cache the file library(&quot;BiocFileCache&quot;) bfc &lt;- BiocFileCache::BiocFileCache() cached_rse_gene &lt;- BiocFileCache::bfcrpath( x = bfc, &quot;https://github.com/LieberInstitute/SPEAQeasyWorkshop2023/raw/devel/provisional_data/rse_gene_mouse_RNAseq_nic-smo.Rdata&quot; ) #&gt; adding rname &#39;https://github.com/LieberInstitute/SPEAQeasyWorkshop2023/raw/devel/provisional_data/rse_gene_mouse_RNAseq_nic-smo.Rdata&#39; ## Check the local path on our cache cached_rse_gene #&gt; BFC1 #&gt; &quot;/github/home/.cache/R/BiocFileCache/3f230e9bf89_rse_gene_mouse_RNAseq_nic-smo.Rdata&quot; ## Load the rse_gene object load(cached_rse_gene, verbose = TRUE) #&gt; Loading objects: #&gt; rse_gene ## General overview of the object rse_gene #&gt; class: RangedSummarizedExperiment #&gt; dim: 55401 208 #&gt; metadata(1): Obtained_from #&gt; assays(2): counts logcounts #&gt; rownames(55401): ENSMUSG00000102693.1 ENSMUSG00000064842.1 ... ENSMUSG00000064371.1 ENSMUSG00000064372.1 #&gt; rowData names(13): Length gencodeID ... DE_in_pup_brain_nicotine DE_in_pup_brain_smoking #&gt; colnames: NULL #&gt; colData names(71): SAMPLE_ID FQCbasicStats ... retained_after_QC_sample_filtering #&gt; retained_after_manual_sample_filtering 4.2 Data overview 4.2.1 Assays The dataset rse_gene contains the following assays: counts: original read counts of the 55,401 mouse genes across 208 samples (inlcuding the 65 nicotine samples of interest). logcounts: normalized and scaled counts (\\(log_2(CPM + 0.5)\\)) of the same genes across the same samples; normalization was carried out applying TMM method with cpm(calcNormFactors()) of edgeR. ## Explore main assay (of raw counts) assay(rse_gene)[1:3, 1:3] ## counts for first 3 genes and 3 samples #&gt; [,1] [,2] [,3] #&gt; ENSMUSG00000102693.1 0 0 0 #&gt; ENSMUSG00000064842.1 0 0 0 #&gt; ENSMUSG00000051951.5 811 710 812 ## Access the same raw data with assays() assays(rse_gene)$counts[1:3, 1:3] #&gt; [,1] [,2] [,3] #&gt; ENSMUSG00000102693.1 0 0 0 #&gt; ENSMUSG00000064842.1 0 0 0 #&gt; ENSMUSG00000051951.5 811 710 812 ## Access lognorm counts assays(rse_gene)$logcounts[1:3, 1:3] #&gt; [,1] [,2] [,3] #&gt; ENSMUSG00000102693.1 -5.985331 -5.985331 -5.985331 #&gt; ENSMUSG00000064842.1 -5.985331 -5.985331 -5.985331 #&gt; ENSMUSG00000051951.5 4.509114 4.865612 4.944597 4.2.2 Sample data The same RSE contains the sample information in colData(RSE). Yellow variables correspond to SPEAQeasy outputs that are going to be used in downstream analyses. Pink variables are specific of the study, such as sample metadata and some others containing additional information of the genes. Blue variables are Quality-Control metrics computed by addPerCellQC() of scuttle. colData(RSE) contains the following sample variables: SAMPLE_ID : is the name of the sample. ERCCsumLogErr : a summary statistic quantifying overall difference of expected and actual ERCC concentrations for one sample. overallMapRate : the decimal fraction of reads which successfully mapped to the reference genome (i.e. numMapped / numReads). mitoMapped : the number of reads which successfully mapped to the mitochondrial chromosome. totalMapped : the number of reads which successfully mapped to the canonical sequences in the reference genome (excluding mitochondrial chromosomes). mitoRate : the decimal fraction of reads which mapped to the mitochondrial chromosome, of those which map at all (i.e. mitoMapped / (totalMapped + mitoMapped)) totalAssignedGene : the decimal fraction of reads assigned unambiguously to a gene (including mitochondrial genes), with featureCounts (Liao et al. 2014), of those in total. rRNA_rate : the decimal fraction of reads assigned to a gene whose type is ‘rRNA’, of those assigned to any gene. Tissue : tissue (mouse brain or blood) from which the sample comes. Age : if the sample comes from an adult or a pup mouse. Sex : if the sample comes from a female (F) or male (M) mouse. Expt : the experiment (nicotine or smoking exposure) to which the sample mouse was subjected; it could be an exposed or a control mouse of that experiment. Group : if the sample belongs to a nicotine/smoking-exposed mouse (Expt) or a nicotine/smoking control mouse (Ctrl). plate : is the plate (1,2 or 3) in which the sample library was prepared. Pregnancy : if the sample comes from a pregnant (Yes) or not pregnant (No) mouse. medium : is the medium in which the sample was treated: water for brain samples and an elution buffer (EB) for the blood ones. flowcell : is the sequencing batch of each sample. sum : library size (total sum of counts across all genes for each sample). detected : number of non-zero expressed genes in each sample. subsets_Mito_sum : total sum of read counts of mt genes in each sample. subsets_Mito_detected : total number of mt genes in each sample. subsets_Mito_percent : % of mt genes’ counts of the total counts of the sample. subsets_Ribo_sum : total sum of read counts of ribosomal genes in each sample. subsets_Ribo_detected : total number of ribosomal genes in each sample. subsets_Ribo_percent : % of ribosomal genes’ counts of the total counts of the sample. Note: in our case, we’ll use samples from the nicotine experiment only, so all samples come from brain and were treated in water. ## Data for first 3 samples and 5 variables colData(rse_gene)[1:3, 1:5] #&gt; DataFrame with 3 rows and 5 columns #&gt; SAMPLE_ID FQCbasicStats perBaseQual perTileQual perSeqQual #&gt; &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;character&gt; #&gt; 1 Sample_2914 PASS PASS PASS PASS #&gt; 2 Sample_4042 PASS PASS PASS PASS #&gt; 3 Sample_4043 PASS PASS PASS PASS 4.2.3 Gene Information Among the information in rowData(RSE) the next variables are of interest for the analysis: gencodeID : GENCODE ID of each gene. ensemblID : gene ID in Ensembl database. EntrezID : identifier of each gene in NCBI Entrez database. Symbol : official gene symbol for each mouse gene. retained_after_feature_filtering : Boolean variable that equals TRUE if the gene passed the gene filtering (with filterByExpr() of edgeR) based on its expression levels and FALSE if not. DE_in_adult_brain_nicotine : Boolean variable that equals TRUE if the feature is differentially expressed (DE) in adult brain samples exposed to nicotine and FALSE if not. DE_in_pup_brain_nicotine : Boolean variable that equals TRUE if the feature is differentially expressed (DE) in pup brain samples exposed to nicotine and FALSE if not. ## Data for first 3 genes and 5 variables rowData(rse_gene)[1:3, 1:5] #&gt; DataFrame with 3 rows and 5 columns #&gt; Length gencodeID ensemblID gene_type EntrezID #&gt; &lt;integer&gt; &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;character&gt; #&gt; ENSMUSG00000102693.1 1070 ENSMUSG00000102693.1 ENSMUSG00000102693 TEC 71042 #&gt; ENSMUSG00000064842.1 110 ENSMUSG00000064842.1 ENSMUSG00000064842 snRNA NA #&gt; ENSMUSG00000051951.5 6094 ENSMUSG00000051951.5 ENSMUSG00000051951 protein_coding 497097 p.exercise { background-color: #F3F9CB; padding: 10px; border: 1px solid black; margin-left: 25px; border-radius: 5px; font-family: sans-serif; } 📑 How would you access data of a specific sample variable For illustrative purposes, we’ll use nicotine data at the gene level only so let’s access that data. ## Original dimensions of the data rse_gene_nic &lt;- rse_gene[,which(rse_gene$Expt==&#39;Nicotine&#39;)] ## New dimensions dim(rse_gene_nic) #&gt; [1] 55401 65 #&gt; ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────── #&gt; setting value #&gt; version R version 4.3.0 (2023-04-21) #&gt; os Ubuntu 22.04.2 LTS #&gt; system x86_64, linux-gnu #&gt; ui X11 #&gt; language (EN) #&gt; collate en_US.UTF-8 #&gt; ctype en_US.UTF-8 #&gt; tz UTC #&gt; date 2023-06-28 #&gt; pandoc 2.19.2 @ /usr/local/bin/ (via rmarkdown) #&gt; #&gt; ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────── #&gt; package * version date (UTC) lib source #&gt; AnnotationDbi 1.62.1 2023-05-02 [1] Bioconductor #&gt; AnnotationHub 3.8.0 2023-04-25 [1] Bioconductor #&gt; aod 1.3.2 2022-04-02 [1] RSPM (R 4.3.0) #&gt; attempt 0.3.1 2020-05-03 [1] RSPM (R 4.3.0) #&gt; backports 1.4.1 2021-12-13 [1] RSPM (R 4.3.0) #&gt; base64enc 0.1-3 2015-07-28 [2] RSPM (R 4.3.0) #&gt; beachmat 2.16.0 2023-04-25 [1] Bioconductor #&gt; beeswarm 0.4.0 2021-06-01 [1] RSPM (R 4.3.0) #&gt; benchmarkme 1.0.8 2022-06-12 [1] RSPM (R 4.3.0) #&gt; benchmarkmeData 1.0.4 2020-04-23 [1] RSPM (R 4.3.0) #&gt; bibtex 0.5.1 2023-01-26 [1] RSPM (R 4.3.0) #&gt; Biobase * 2.60.0 2023-04-25 [1] Bioconductor #&gt; BiocFileCache * 2.8.0 2023-04-25 [1] Bioconductor #&gt; BiocGenerics * 0.46.0 2023-04-25 [1] Bioconductor #&gt; BiocIO 1.10.0 2023-04-25 [1] Bioconductor #&gt; BiocManager 1.30.21 2023-06-10 [1] RSPM (R 4.3.0) #&gt; BiocNeighbors 1.18.0 2023-04-25 [1] Bioconductor #&gt; BiocParallel * 1.34.2 2023-05-22 [1] Bioconductor #&gt; BiocSingular 1.16.0 2023-04-25 [1] Bioconductor #&gt; BiocStyle * 2.28.0 2023-04-25 [1] Bioconductor #&gt; biocthis * 1.10.3 2023-06-07 [1] Bioconductor #&gt; BiocVersion 3.17.1 2022-11-04 [2] Bioconductor #&gt; Biostrings 2.68.1 2023-05-16 [1] Bioconductor #&gt; bit 4.0.5 2022-11-15 [1] RSPM (R 4.3.0) #&gt; bit64 4.0.5 2020-08-30 [1] RSPM (R 4.3.0) #&gt; bitops 1.0-7 2021-04-24 [1] RSPM (R 4.3.0) #&gt; blob 1.2.4 2023-03-17 [1] RSPM (R 4.3.0) #&gt; bookdown 0.34 2023-05-09 [1] RSPM (R 4.3.0) #&gt; boot 1.3-28.1 2022-11-22 [3] CRAN (R 4.3.0) #&gt; broom 1.0.5 2023-06-09 [1] RSPM (R 4.3.0) #&gt; bslib 0.5.0 2023-06-09 [2] RSPM (R 4.3.0) #&gt; cachem 1.0.8 2023-05-01 [2] RSPM (R 4.3.0) #&gt; caTools 1.18.2 2021-03-28 [1] RSPM (R 4.3.0) #&gt; checkmate 2.2.0 2023-04-27 [1] RSPM (R 4.3.0) #&gt; circlize 0.4.15 2022-05-10 [1] RSPM (R 4.3.0) #&gt; cli 3.6.1 2023-03-23 [2] RSPM (R 4.3.0) #&gt; clue 0.3-64 2023-01-31 [1] RSPM (R 4.3.0) #&gt; cluster 2.1.4 2022-08-22 [3] CRAN (R 4.3.0) #&gt; codetools 0.2-19 2023-02-01 [3] CRAN (R 4.3.0) #&gt; colorspace 2.1-0 2023-01-23 [1] RSPM (R 4.3.0) #&gt; colourpicker 1.2.0 2022-10-28 [1] RSPM (R 4.3.0) #&gt; ComplexHeatmap * 2.16.0 2023-04-25 [1] Bioconductor #&gt; config 0.3.1 2020-12-17 [1] RSPM (R 4.3.0) #&gt; cowplot * 1.1.1 2020-12-30 [1] RSPM (R 4.3.0) #&gt; crayon 1.5.2 2022-09-29 [2] RSPM (R 4.3.0) #&gt; curl 5.0.1 2023-06-07 [2] RSPM (R 4.3.0) #&gt; data.table 1.14.8 2023-02-17 [1] RSPM (R 4.3.0) #&gt; DBI 1.1.3 2022-06-18 [1] RSPM (R 4.3.0) #&gt; dbplyr * 2.3.2 2023-03-21 [1] RSPM (R 4.3.0) #&gt; DelayedArray 0.26.3 2023-05-22 [1] Bioconductor #&gt; DelayedMatrixStats 1.22.1 2023-06-09 [1] Bioconductor #&gt; digest 0.6.32 2023-06-26 [2] RSPM (R 4.3.0) #&gt; doParallel 1.0.17 2022-02-07 [1] RSPM (R 4.3.0) #&gt; dotCall64 1.0-2 2022-10-03 [1] RSPM (R 4.3.0) #&gt; dplyr 1.1.2 2023-04-20 [1] RSPM (R 4.3.0) #&gt; dqrng 0.3.0 2021-05-01 [1] RSPM (R 4.3.0) #&gt; DropletUtils 1.20.0 2023-04-25 [1] Bioconductor #&gt; DT 0.28 2023-05-18 [1] RSPM (R 4.3.0) #&gt; edgeR * 3.42.4 2023-05-31 [1] Bioconductor #&gt; ellipsis 0.3.2 2021-04-29 [2] RSPM (R 4.3.0) #&gt; EnvStats 2.7.0 2022-03-07 [1] RSPM (R 4.3.0) #&gt; evaluate 0.21 2023-05-05 [2] RSPM (R 4.3.0) #&gt; ExperimentHub 2.8.0 2023-04-25 [1] Bioconductor #&gt; ExploreModelMatrix * 1.12.0 2023-04-25 [1] Bioconductor #&gt; fansi 1.0.4 2023-01-22 [2] RSPM (R 4.3.0) #&gt; fastmap 1.1.1 2023-02-24 [2] RSPM (R 4.3.0) #&gt; fields 14.1 2022-08-12 [1] RSPM (R 4.3.0) #&gt; filelock 1.0.2 2018-10-05 [1] RSPM (R 4.3.0) #&gt; foreach 1.5.2 2022-02-02 [1] RSPM (R 4.3.0) #&gt; foreign 0.8-84 2022-12-06 [3] CRAN (R 4.3.0) #&gt; Formula 1.2-5 2023-02-24 [1] RSPM (R 4.3.0) #&gt; fs 1.6.2 2023-04-25 [2] RSPM (R 4.3.0) #&gt; generics 0.1.3 2022-07-05 [1] RSPM (R 4.3.0) #&gt; GenomeInfoDb * 1.36.1 2023-06-21 [1] Bioconductor #&gt; GenomeInfoDbData 1.2.10 2023-05-17 [1] Bioconductor #&gt; GenomicAlignments 1.36.0 2023-04-25 [1] Bioconductor #&gt; GenomicRanges * 1.52.0 2023-04-25 [1] Bioconductor #&gt; GetoptLong 1.0.5 2020-12-15 [1] RSPM (R 4.3.0) #&gt; ggbeeswarm 0.7.2 2023-04-29 [1] RSPM (R 4.3.0) #&gt; ggplot2 * 3.4.2 2023-04-03 [1] RSPM (R 4.3.0) #&gt; ggrepel * 0.9.3 2023-02-03 [1] RSPM (R 4.3.0) #&gt; GlobalOptions 0.1.2 2020-06-10 [1] RSPM (R 4.3.0) #&gt; glue 1.6.2 2022-02-24 [2] RSPM (R 4.3.0) #&gt; golem 0.4.1 2023-06-05 [1] RSPM (R 4.3.0) #&gt; gplots 3.1.3 2022-04-25 [1] RSPM (R 4.3.0) #&gt; gridExtra 2.3 2017-09-09 [1] RSPM (R 4.3.0) #&gt; gtable 0.3.3 2023-03-21 [1] RSPM (R 4.3.0) #&gt; gtools 3.9.4 2022-11-27 [1] RSPM (R 4.3.0) #&gt; HDF5Array 1.28.1 2023-05-01 [1] Bioconductor #&gt; here * 1.0.1 2020-12-13 [1] RSPM (R 4.3.0) #&gt; Hmisc * 5.1-0 2023-05-08 [1] RSPM (R 4.3.0) #&gt; hms 1.1.3 2023-03-21 [1] RSPM (R 4.3.0) #&gt; htmlTable 2.4.1 2022-07-07 [1] RSPM (R 4.3.0) #&gt; htmltools 0.5.5 2023-03-23 [2] RSPM (R 4.3.0) #&gt; htmlwidgets 1.6.2 2023-03-17 [2] RSPM (R 4.3.0) #&gt; httpuv 1.6.11 2023-05-11 [2] RSPM (R 4.3.0) #&gt; httr 1.4.6 2023-05-08 [2] RSPM (R 4.3.0) #&gt; igraph 1.5.0 2023-06-16 [1] RSPM (R 4.3.0) #&gt; interactiveDisplayBase 1.38.0 2023-04-25 [1] Bioconductor #&gt; IRanges * 2.34.1 2023-06-22 [1] Bioconductor #&gt; irlba 2.3.5.1 2022-10-03 [1] RSPM (R 4.3.0) #&gt; iSEE * 2.12.0 2023-04-25 [1] Bioconductor #&gt; iterators 1.0.14 2022-02-05 [1] RSPM (R 4.3.0) #&gt; jquerylib 0.1.4 2021-04-26 [2] RSPM (R 4.3.0) #&gt; jsonlite 1.8.5 2023-06-05 [2] RSPM (R 4.3.0) #&gt; KEGGREST 1.40.0 2023-04-25 [1] Bioconductor #&gt; KernSmooth 2.23-21 2023-05-03 [3] RSPM (R 4.3.0) #&gt; knitr 1.43 2023-05-25 [2] RSPM (R 4.3.0) #&gt; later 1.3.1 2023-05-02 [2] RSPM (R 4.3.0) #&gt; lattice 0.21-8 2023-04-05 [3] CRAN (R 4.3.0) #&gt; lazyeval 0.2.2 2019-03-15 [1] RSPM (R 4.3.0) #&gt; lifecycle 1.0.3 2022-10-07 [2] RSPM (R 4.3.0) #&gt; limma * 3.56.2 2023-06-04 [1] Bioconductor #&gt; lme4 1.1-33 2023-04-25 [1] RSPM (R 4.3.0) #&gt; lobstr * 1.1.2 2022-06-22 [1] RSPM (R 4.3.0) #&gt; locfit 1.5-9.8 2023-06-11 [1] RSPM (R 4.3.0) #&gt; lubridate 1.9.2 2023-02-10 [1] RSPM (R 4.3.0) #&gt; magick 2.7.4 2023-03-09 [1] RSPM (R 4.3.0) #&gt; magrittr 2.0.3 2022-03-30 [2] RSPM (R 4.3.0) #&gt; maps 3.4.1 2022-10-30 [1] RSPM (R 4.3.0) #&gt; MASS 7.3-60 2023-05-04 [3] RSPM (R 4.3.0) #&gt; Matrix 1.5-4.1 2023-05-18 [3] RSPM (R 4.3.0) #&gt; MatrixGenerics * 1.12.2 2023-06-09 [1] Bioconductor #&gt; matrixStats * 1.0.0 2023-06-02 [1] RSPM (R 4.3.0) #&gt; memoise 2.0.1 2021-11-26 [2] RSPM (R 4.3.0) #&gt; mgcv 1.8-42 2023-03-02 [3] CRAN (R 4.3.0) #&gt; mime 0.12 2021-09-28 [2] RSPM (R 4.3.0) #&gt; miniUI 0.1.1.1 2018-05-18 [2] RSPM (R 4.3.0) #&gt; minqa 1.2.5 2022-10-19 [1] RSPM (R 4.3.0) #&gt; munsell 0.5.0 2018-06-12 [1] RSPM (R 4.3.0) #&gt; mvtnorm 1.2-2 2023-06-08 [1] RSPM (R 4.3.0) #&gt; nlme 3.1-162 2023-01-31 [3] CRAN (R 4.3.0) #&gt; nloptr 2.0.3 2022-05-26 [1] RSPM (R 4.3.0) #&gt; nnet 7.3-19 2023-05-03 [3] RSPM (R 4.3.0) #&gt; paletteer 1.5.0 2022-10-19 [1] RSPM (R 4.3.0) #&gt; patchwork * 1.1.2 2022-08-19 [1] RSPM (R 4.3.0) #&gt; pbkrtest 0.5.2 2023-01-19 [1] RSPM (R 4.3.0) #&gt; pheatmap * 1.0.12 2019-01-04 [1] RSPM (R 4.3.0) #&gt; pillar 1.9.0 2023-03-22 [2] RSPM (R 4.3.0) #&gt; pkgconfig 2.0.3 2019-09-22 [2] RSPM (R 4.3.0) #&gt; plotly 4.10.2 2023-06-03 [1] RSPM (R 4.3.0) #&gt; plyr 1.8.8 2022-11-11 [1] RSPM (R 4.3.0) #&gt; png 0.1-8 2022-11-29 [1] RSPM (R 4.3.0) #&gt; postcards * 0.2.3 2022-01-07 [1] RSPM (R 4.3.0) #&gt; prettyunits 1.1.1 2020-01-24 [2] RSPM (R 4.3.0) #&gt; progress 1.2.2 2019-05-16 [1] RSPM (R 4.3.0) #&gt; promises 1.2.0.1 2021-02-11 [2] RSPM (R 4.3.0) #&gt; purrr 1.0.1 2023-01-10 [2] RSPM (R 4.3.0) #&gt; R.cache 0.16.0 2022-07-21 [1] RSPM (R 4.3.0) #&gt; R.methodsS3 1.8.2 2022-06-13 [1] RSPM (R 4.3.0) #&gt; R.oo 1.25.0 2022-06-12 [1] RSPM (R 4.3.0) #&gt; R.utils 2.12.2 2022-11-11 [1] RSPM (R 4.3.0) #&gt; R6 2.5.1 2021-08-19 [2] RSPM (R 4.3.0) #&gt; rappdirs 0.3.3 2021-01-31 [2] RSPM (R 4.3.0) #&gt; rbibutils 2.2.13 2023-01-13 [1] RSPM (R 4.3.0) #&gt; RColorBrewer * 1.1-3 2022-04-03 [1] RSPM (R 4.3.0) #&gt; Rcpp 1.0.10 2023-01-22 [2] RSPM (R 4.3.0) #&gt; RCurl 1.98-1.12 2023-03-27 [1] RSPM (R 4.3.0) #&gt; Rdpack 2.4 2022-07-20 [1] RSPM (R 4.3.0) #&gt; recount3 * 1.10.2 2023-05-07 [1] Bioconductor #&gt; RefManageR * 1.4.0 2022-09-30 [1] RSPM (R 4.3.0) #&gt; remaCor 0.0.16 2023-06-21 [1] RSPM (R 4.3.0) #&gt; rematch2 2.1.2 2020-05-01 [2] RSPM (R 4.3.0) #&gt; reshape2 1.4.4 2020-04-09 [1] RSPM (R 4.3.0) #&gt; restfulr 0.0.15 2022-06-16 [1] RSPM (R 4.3.0) #&gt; rhdf5 2.44.0 2023-04-25 [1] Bioconductor #&gt; rhdf5filters 1.12.1 2023-04-30 [1] Bioconductor #&gt; Rhdf5lib 1.22.0 2023-04-25 [1] Bioconductor #&gt; RhpcBLASctl 0.23-42 2023-02-11 [1] RSPM (R 4.3.0) #&gt; rintrojs 0.3.2 2022-08-09 [1] RSPM (R 4.3.0) #&gt; rjson 0.2.21 2022-01-09 [1] RSPM (R 4.3.0) #&gt; rlang * 1.1.1 2023-04-28 [2] RSPM (R 4.3.0) #&gt; rmarkdown 2.22 2023-06-01 [2] RSPM (R 4.3.0) #&gt; rpart 4.1.19 2022-10-21 [3] CRAN (R 4.3.0) #&gt; rprojroot 2.0.3 2022-04-02 [2] RSPM (R 4.3.0) #&gt; Rsamtools 2.16.0 2023-04-25 [1] Bioconductor #&gt; RSQLite 2.3.1 2023-04-03 [1] RSPM (R 4.3.0) #&gt; rstudioapi 0.14 2022-08-22 [2] RSPM (R 4.3.0) #&gt; rsvd 1.0.5 2021-04-16 [1] RSPM (R 4.3.0) #&gt; rtracklayer 1.60.0 2023-04-25 [1] Bioconductor #&gt; S4Arrays 1.0.4 2023-05-14 [1] Bioconductor #&gt; S4Vectors * 0.38.1 2023-05-02 [1] Bioconductor #&gt; sass 0.4.6 2023-05-03 [2] RSPM (R 4.3.0) #&gt; ScaledMatrix 1.8.1 2023-05-03 [1] Bioconductor #&gt; scales 1.2.1 2022-08-20 [1] RSPM (R 4.3.0) #&gt; scater * 1.28.0 2023-04-25 [1] Bioconductor #&gt; scuttle * 1.10.1 2023-05-02 [1] Bioconductor #&gt; sessioninfo * 1.2.2 2021-12-06 [2] RSPM (R 4.3.0) #&gt; shape 1.4.6 2021-05-19 [1] RSPM (R 4.3.0) #&gt; shiny 1.7.4 2022-12-15 [2] RSPM (R 4.3.0) #&gt; shinyAce 0.4.2 2022-05-06 [1] RSPM (R 4.3.0) #&gt; shinydashboard 0.7.2 2021-09-30 [1] RSPM (R 4.3.0) #&gt; shinyjs 2.1.0 2021-12-23 [1] RSPM (R 4.3.0) #&gt; shinyWidgets 0.7.6 2023-01-08 [1] RSPM (R 4.3.0) #&gt; SingleCellExperiment * 1.22.0 2023-04-25 [1] Bioconductor #&gt; smokingMouse * 0.99.5 2023-06-28 [1] Github (LieberInstitute/smokingMouse@2e7640c) #&gt; spam 2.9-1 2022-08-07 [1] RSPM (R 4.3.0) #&gt; sparseMatrixStats 1.12.1 2023-06-20 [1] Bioconductor #&gt; SpatialExperiment * 1.10.0 2023-04-25 [1] Bioconductor #&gt; spatialLIBD * 1.12.0 2023-04-27 [1] Bioconductor #&gt; statmod 1.5.0 2023-01-06 [1] RSPM (R 4.3.0) #&gt; stringi 1.7.12 2023-01-11 [2] RSPM (R 4.3.0) #&gt; stringr * 1.5.0 2022-12-02 [2] RSPM (R 4.3.0) #&gt; styler 1.10.1 2023-06-05 [1] RSPM (R 4.3.0) #&gt; SummarizedExperiment * 1.30.2 2023-06-06 [1] Bioconductor #&gt; tibble 3.2.1 2023-03-20 [2] RSPM (R 4.3.0) #&gt; tidyr 1.3.0 2023-01-24 [1] RSPM (R 4.3.0) #&gt; tidyselect 1.2.0 2022-10-10 [1] RSPM (R 4.3.0) #&gt; timechange 0.2.0 2023-01-11 [1] RSPM (R 4.3.0) #&gt; usethis * 2.2.1 2023-06-23 [2] RSPM (R 4.3.0) #&gt; utf8 1.2.3 2023-01-31 [2] RSPM (R 4.3.0) #&gt; variancePartition * 1.30.2 2023-06-07 [1] Bioconductor #&gt; vctrs 0.6.3 2023-06-14 [2] RSPM (R 4.3.0) #&gt; vipor 0.4.5 2017-03-22 [1] RSPM (R 4.3.0) #&gt; viridis 0.6.3 2023-05-03 [1] RSPM (R 4.3.0) #&gt; viridisLite 0.4.2 2023-05-02 [1] RSPM (R 4.3.0) #&gt; withr 2.5.0 2022-03-03 [2] RSPM (R 4.3.0) #&gt; xfun 0.39 2023-04-20 [2] RSPM (R 4.3.0) #&gt; XML 3.99-0.14 2023-03-19 [1] RSPM (R 4.3.0) #&gt; xml2 1.3.4 2023-04-27 [2] RSPM (R 4.3.0) #&gt; xtable 1.8-4 2019-04-21 [2] RSPM (R 4.3.0) #&gt; XVector 0.40.0 2023-04-25 [1] Bioconductor #&gt; yaml 2.3.7 2023-01-23 [2] RSPM (R 4.3.0) #&gt; zlibbioc 1.46.0 2023-04-25 [1] Bioconductor #&gt; #&gt; [1] /__w/_temp/Library #&gt; [2] /usr/local/lib/R/site-library #&gt; [3] /usr/local/lib/R/library #&gt; #&gt; ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── "],["isee-introduction.html", "5 iSEE introduction", " 5 iSEE introduction Instructor: Leo "],["rse-plotting-basics-with-smokingmouse.html", "6 RSE plotting basics with smokingMouse 1. Data preparation 2. Exploratory Data Analysis", " 6 RSE plotting basics with smokingMouse Instructor: Daianna ## Download data library(&quot;BiocFileCache&quot;) bfc &lt;- BiocFileCache::BiocFileCache() cached_rse_gene &lt;- BiocFileCache::bfcrpath( x = bfc, &quot;https://github.com/LieberInstitute/SPEAQeasyWorkshop2023/raw/devel/provisional_data/rse_gene_mouse_RNAseq_nic-smo.Rdata&quot; ) ## Check the local path on our cache cached_rse_gene #&gt; BFC1 #&gt; &quot;/github/home/.cache/R/BiocFileCache/3f230e9bf89_rse_gene_mouse_RNAseq_nic-smo.Rdata&quot; ## Load the rse_gene object load(cached_rse_gene, verbose = TRUE) #&gt; Loading objects: #&gt; rse_gene ## Nicotine data rse_gene_nic &lt;- rse_gene[ ,which(rse_gene$Expt==&#39;Nicotine&#39;)] In this part of the course you’ll have a plotting session in which you’ll learn what type of plots you can create to explore your data, but please note that this is not a differential expression analysis itself. The steps that will be performed are shown in Figure 1. The main objective of this first part is to explore the quality of the samples, their differences in gene expression variations and the impact of sample variables on gene expression variance. You’ll also learn how to visualize gene expression counts. Figure 1: Summary of the analyses. Steps in yellow will be properly performed. 1. Data Preparation : in this initial part counts are normalized and scaled and low-expressed genes are filtered. 2. Exploratory Data Analysis: the quality of the samples is compared, poor-quality samples are removed and both gene-level and sample-level effects are explored. 3. Differential Expression Analysis: a linear model is fitted for each gene and log fold changes are obtained for the contrast of interest; other statistics are also computed and compared. Here the differentially expressed genes (DEGs) are determined and quantified. 4. GO &amp; KEGG Analyses: in this part Gene Ontology and KEGG enrichment analyses are performed to identify biological processes and functions in which DEGs are significantly involved. 5. DEG visualization: heatmaps are created to visually contrast gene expression levels of DEGs in control and experimental samples. Abbreviations: CPM: counts per million; QC: quality control; PC: principal component; DEG: differentially expressed genes; GO: Gene Ontology; KEGG: Kyoto Encyclopedia of Genes and Genomes. 1. Data preparation Even before exploring the samples, the first step is to normalize the counts and filter non-expressed genes; we won’t do the processes themselves since we already have normalized and filtered data but let’s check why these steps are important and where to extract the data we need for posterior analyses. 1.1 Data normalization Data normalization is a primordial step when working with expression data because raw counts do not necessarily reflect real expression measures of the genes since there are technical differences in the way the libraries are prepared and sequenced, as well as intrinsic differences in the genes that are translated into more or less mapping reads. Particularly, there are within-sample effects that are the differences between genes in the same sample, such as their length (the longer the gene, the more reads it will have) and GC content, factors that contribute to variations in their counts. On the other hand, between-sample effects are differences between samples such as the sequencing depth, i.e., the total number of molecules sequenced, and the library size, i.e., the total number of reads of each sample [1]. These variables lead to virtually different mRNA amounts but of course are not due to the biological or treatment conditions of interest (such as nicotine administration in this example) so in order to remove, or at least, to minimize this technical bias and obtain measures comparable and consistent across samples, raw counts must be normalized by these factors. The data that we’ll use in this case are already normalized in assays(rse_gene)$logcounts. Specifically, the assay contains counts per million (CPM), also known as reads per million (RPM), one basic gene expression unit that only normalizes by the sequencing depth and is computed by dividing the read counts of a gene in a sample by a scaling factor given by the total mapping reads of the sample per million [2]: \\[CPM = \\frac{read \\ \\ counts \\ \\ of \\ \\ gene \\ \\ \\times \\ \\ 10^6 }{Total \\ \\ mapping \\ \\ reads \\ \\ of \\ \\ sample}\\] As outlined in Data overview and download, the scaling factors were obtained with calcNormFactors() applying the Trimmed Mean of M-Values (TMM) method, the edgeR package’s default normalization method that assumes that most genes are not differentially expressed. The effective library sizes of the samples and the CPM of each observation were computed with the edgeR function cpm() setting the log argument to TRUE and prior.count to 0.5 to receive values in \\(log_2(CPM+0.5)\\). After data normalization and scaling, we’d expect the read counts to follow a Norm distribution, something we can confirm comparing the counts’ distribution before and after the normalization. Consider both datasets contain the exact same genes. library(ggplot2) ## Histogram and density plot of read counts before and after normalization ## Raw counts counts_data &lt;- data.frame(counts=as.vector(assays(rse_gene_nic)$counts)) plot &lt;- ggplot(counts_data, aes(x=counts)) + geom_histogram(colour=&quot;black&quot;, fill=&quot;lightgray&quot;) + labs(x=&#39;read counts&#39;, y=&#39;Frecuency&#39;) + theme_classic() plot + theme(plot.margin = unit(c(2,4,2,4), &quot;cm&quot;)) ## Normalized counts logcounts_data &lt;- data.frame(logcounts=as.vector(assays(rse_gene_nic)$logcounts)) plot &lt;- ggplot(logcounts_data, aes(x=logcounts)) + geom_histogram(aes(y=..density..), colour=&quot;darkgray&quot;, fill=&quot;lightgray&quot;) + theme_classic() + geom_density(fill=&quot;#69b3a2&quot;, alpha=0.3) + labs(x=&#39;log(CPM+0.5)&#39;, y=&#39;Frecuency&#39;) plot + theme(plot.margin = unit(c(2,4,2,4), &quot;cm&quot;)) As presented, after data transformation, we can now see a more widespread distribution of the counts, but note that most of them are zeros in the first plot (the one with the raw counts) and those zeros remain after normalization, corresponding to counts below 0 in the second plot. That is because we haven’t filtered the low and zero-expressed genes. 1.2 Gene filtering Low-expressed or non-expressed genes in many samples are not of biological interest in a study of differential expression because they don’t inform about the gene expression changes and they are, by definition, not differentially expressed, so we have to drop them using filterByExpr() from edgeR that only keeps genes with at least K CPM in n samples and with a minimum total number of counts across all samples. ## Retain genes that passed filtering step rse_gene_filt &lt;- rse_gene_nic[rowData(rse_gene_nic)$retained_after_feature_filtering==TRUE,] ## Normalized counts and filtered genes filt_logcounts_data &lt;- data.frame(logcounts=as.vector(assays(rse_gene_filt)$logcounts)) ## Plot plot &lt;- ggplot(filt_logcounts_data, aes(x=logcounts)) + geom_histogram(aes(y=..density..), colour=&quot;darkgray&quot;, fill=&quot;lightgray&quot;) + theme_classic() + geom_density(fill=&quot;#69b3a2&quot;, alpha=0.3) + labs(x=&#39;log(CPM+0.5)&#39;, y=&#39;Frecuency&#39;) plot + theme(plot.margin = unit(c(2,4,2,4), &quot;cm&quot;)) In this third plot we can observe a curve that is closer (though not completely) to a Norm distribution and with less low-expressed genes. With the object rse_gene_filt we can proceed with downstream analyses. 2. Exploratory Data Analysis The first formal step that we will be performing is the sample exploration. This crucial initial part of the analysis consists of an examination of differences and relationships between Quality-Control (QC) metrics of the samples from different groups in order to identify poor-quality samples that must be removed before DEA. After that, the sample variables in the meta-data also need to be analyzed and filtered based on the percentage of gene expression variance that they explain for each gene. 2.1 Quality Control Analysis First we have to explore and compare the the quality-control metrics of the samples in the different groups given by covariates such as age, sex, pregnancy state, group, plate and flowcell. See Sample Information for the description of the variables. p.comment { background-color: #DBDBDB; padding: 10px; border: 1px solid black; margin-left: 25px; border-radius: 5px; font-family: sans-serif; } ❓ Why is that relevant? As you could imagine, technical and methodological differences in all the steps that were carried out during the experimental stages are potential sources of variation in the quality of the samples. Just imagine all that could have been gone wrong or unexpected while experimenting with mice, during the sampling, in the RNA extraction using different batches, when treating samples in different mediums, when preparing libraries in different plates and sequencing in different flowcells. Moreover, the inherent features of the mice from which the samples come from such as age, tissue, sex and pregnancy state could also affect the samples’ metrics if, for example, they were separately analyzed and processed. ❓But why do we care about mitochodrial and ribosomal counts as QC metrics? In the process of mRNA extraction, either by mRNA enrichment (capturing polyadenilated mRNAs) or rRNA-depletion (removing rRNA), we’d expect to have a low number of ribosomal counts, i.e., counts that map to rDNA, and if we don’t, something must have gone wrong with the procedures. In the case of mitochondrial counts something similar occurs: higher mitochondrial rates will be obtained if the cytoplasmic mRNA capture was deficient or if the transcripts were lost by some technical issue, increasing the proportion of mitochondrial mRNAs. As a result, high mitoRate and rRNA_rate imply poor quality in the samples. Note: the QC metrics were computed with the unprocessed datasets (neither filtered nor normalized) to preserve the original estimates of the samples. 2.1.1 Evaluate QC metrics for groups of samples Fortunately, we can identify to some extent possible factors that could have influenced on the quality of the samples, as well as isolated samples that are problematic. To do that, we will create boxplots that present the distribution of the samples’ metrics separating them by sample variables. library(Hmisc) library(stringr) library(cowplot) ## Define QC metrics of interest qc_metrics &lt;- c(&#39;mitoRate&#39;, &#39;overallMapRate&#39;, &#39;totalAssignedGene&#39;, &#39;rRNA_rate&#39;, &#39;sum&#39;, &#39;detected&#39;, &#39;ERCCsumLogErr&#39;) ## Define sample variables of interest sample_variables &lt;- c(&#39;Group&#39;, &#39;Age&#39;, &#39;Sex&#39;, &#39;Pregnancy&#39;, &#39;plate&#39;, &#39;flowcell&#39;) ## Function to create boxplots of QC metrics for groups of samples QC_boxplots &lt;- function(qc_metric, sample_var){ ## Define sample colors depending on the sample variable if (sample_var==&quot;Group&quot;){ colors=c(&#39;Control&#39;=&#39;brown2&#39;, &#39;Experimental&#39;=&#39;deepskyblue3&#39;) } else if (sample_var==&quot;Age&quot;){ colors=c(&#39;Adult&#39;=&#39;slateblue3&#39;, &#39;Pup&#39;=&#39;yellow3&#39;) } else if (sample_var==&quot;Sex&quot;){ colors=c(&#39;F&#39;=&#39;hotpink1&#39;, &#39;M&#39;=&#39;dodgerblue&#39;) } else if (sample_var==&#39;Pregnancy&#39;){ colors=c(&#39;Yes&#39;=&#39;darkorchid3&#39;, &#39;No&#39;=&#39;darkolivegreen4&#39;) } else if (sample_var==&#39;plate&#39;){ colors=c(&#39;Plate1&#39;=&#39;darkorange&#39;, &#39;Plate2&#39;=&#39;lightskyblue&#39;, &#39;Plate3&#39;=&#39;deeppink1&#39;) } else if (sample_var==&#39;flowcell&#39;){ colors=c(&#39;HKCG7DSXX&#39;=&#39;chartreuse2&#39;,&#39;HKCMHDSXX&#39;=&#39;magenta&#39;, &#39;HKCNKDSXX&#39;=&#39;turquoise3&#39;, &#39;HKCTMDSXX&#39;=&#39;tomato&#39;) } ## Axis labels x_label=capitalize(sample_var) y_label=str_replace_all(qc_metric, c(&quot;_&quot;=&quot;&quot;)) ## x-axis text angle and position if (sample_var==&#39;flowcell&#39;){ x_axis_angle = 18 x_axis_hjust = 0.5 x_axis_vjust = 0.7 x_axis_size = 4 } else { x_axis_angle = 0 x_axis_hjust = 0.5 x_axis_vjust = 0.5 x_axis_size = 6 } ## Extract sample data in colData(rse_gene_filt) data &lt;- data.frame(colData(rse_gene_filt)) ## Sample variable separating samples in x-axis and QC metric in y-axis ## (Coloring by sample variable) plot &lt;- ggplot(data = data, mapping = aes(x = !! rlang::sym(sample_var), y = !! rlang::sym(qc_metric), color = !! rlang::sym(sample_var))) + ## Add violin plots geom_violin(alpha = 0, size = 0.4, color=&#39;black&#39;, width=0.7)+ ## Spread dots geom_jitter(width = 0.08, alpha = 0.7, size = 1.3) + ## Add boxplots geom_boxplot(alpha = 0, size = 0.4, width=0.1, color=&#39;black&#39;) + ## Set colors scale_color_manual(values = colors) + ## Define axis labels labs(y= y_label, x = x_label) + ## Get rid of the background theme_bw() + ## Hide legend and define plot margins and size of axis title and text theme(legend.position = &quot;none&quot;, plot.margin = unit(c(0.5,0.4,0.5,0.4), &quot;cm&quot;), axis.title = element_text(size = 7), axis.text = element_text(size = x_axis_size), axis.text.x = element_text(angle = x_axis_angle, hjust = x_axis_hjust, vjust = x_axis_vjust)) return(plot) } ## Plots of all QC metrics for each sample variable multiple_QC_boxplots &lt;- function(sample_var){ i=1 plots = list() for (qc_metric in qc_metrics) { ## Call function to create each individual plot plots[[i]]&lt;- QC_boxplots(qc_metric, sample_var) i=i+1 } ## Arrange multiple plots into a grid print(plot_grid(plots[[1]], plots[[2]], plots[[3]], plots[[4]], plots[[5]], plots[[6]], plots[[7]], nrow = 2)) } multiple_QC_boxplots(&#39;Age&#39;) Initially, when we separate samples by Age, we can appreciate a clear segregation of adult and pup samples in mitoRate , with higher mitochondrial rates for adult samples and thus, being lower quality samples than the pup ones. We can also see that pup samples have higher totalAssignedGene , again being higher quality. The samples are very similar in the rest of the QC metrics. The former differences must be taken into account because they guide further sample separation by Age, which is necessary to avoid dropping most of the adult samples (that are lower quality) in the QC-based sample filtering (see below) and to prevent misinterpreting sample variation given by quality and not by mice age itself. multiple_QC_boxplots(&#39;Sex&#39;) With Sex, female and male samples have similar QC metrics but there are some female samples that have high mitoRate and low totalAssignedGene , but males don´t. That is consistent with the fact that all males are pups and as we previously observed, pup samples present better QC metrics, but since not all pups are males, some female pups also have smaller mitoRate and greater totalAssignedGene . So in this case samples’ differences are actually dictated by Age and not by Sex. multiple_QC_boxplots(&#39;Group&#39;) Notably, for Group no evident contrasts are seen in the quality of the samples, which means that both, control and exposed samples have similar metrics and therefore, the differences between them won’t be determined by technical factors but effectively by gene expression changes. multiple_QC_boxplots(&#39;Pregnancy&#39;) Pregnancy variable is interesting because pregnant dams were obviously females and adults, which we already noted are lower quality. Accordingly to that, pregnant samples present overall higher mitoRate and lower totalAssignedGene , sum (library size) and detected (number of expressed genes) than some samples coming from non-pregnant mice. However, these samples have smaller | ERCCsumLogErr |, which means that they had smaller differences between expected and observed concentrations of control transcripts. Notwithstanding, we must clarify one more time that as in Sex, the trends observed in Pregnancy are all given by Age: it is Age the variable that fully segregates samples in mitoRate and almost completely in , lower totalAssignedGene . Because all pregnant dams were adults, their metrics will be positioned where the adult samples did, but there were also not pregnant adults that share similar QC values. multiple_QC_boxplots(&#39;plate&#39;) In plate, no alarming differences are presented but some samples from the 1st plate have low (though not much lower) overallMapRate , totalAssignedGene and sum . multiple_QC_boxplots(&#39;flowcell&#39;) For the flowcell, again not worrying distinctiveness are detected, with the exception of a few individual samples far from the rest. In all the previous plots we can appreciate a group of samples placed below in mitoRate that correspond to pup samples. The relationship is more fuzzy in totalAssignedGene . 2.1.2 Examine relationships between QC metrics of samples Secondly, we want to analyze if there are relationships between QC variables that explain the presence of samples with two or more particular QC metrics. For that, scatterplots are useful because they enable the evaluation of pairs of samples’ QC metrics. ## Scatterplots for a pair of QC metrics QC_scatterplots &lt;- function(sample_var, qc_metric1, qc_metric2){ ## Define sample colors if (sample_var==&quot;Group&quot;){ colors=c(&#39;Control&#39;=&#39;brown2&#39;, &#39;Experimental&#39;=&#39;deepskyblue3&#39;) } else if (sample_var==&quot;Age&quot;){ colors=c(&#39;Adult&#39;=&#39;slateblue3&#39;, &#39;Pup&#39;=&#39;yellow3&#39;) } else if (sample_var==&quot;Sex&quot;){ colors=c(&#39;F&#39;=&#39;hotpink1&#39;, &#39;M&#39;=&#39;dodgerblue&#39;) } else if (sample_var==&#39;Pregnancy&#39;){ colors=c(&#39;Yes&#39;=&#39;darkorchid3&#39;, &#39;No&#39;=&#39;darkolivegreen4&#39;) } else if (sample_var==&#39;plate&#39;){ colors=c(&#39;Plate1&#39;=&#39;darkorange&#39;, &#39;Plate2&#39;=&#39;lightskyblue&#39;, &#39;Plate3&#39;=&#39;deeppink1&#39;) } else if (sample_var==&#39;flowcell&#39;){ colors=c(&#39;HKCG7DSXX&#39;=&#39;chartreuse2&#39;,&#39;HKCMHDSXX&#39;=&#39;magenta&#39;, &#39;HKCNKDSXX&#39;=&#39;turquoise3&#39;, &#39;HKCTMDSXX&#39;=&#39;tomato&#39;) } data &lt;- colData(rse_gene_filt) ## Scatterplots for continuous variable vs continuous variable ## First QC metric in x-axis and second QC metric in y-axis plot &lt;- ggplot(as.data.frame(data), aes(x=!! rlang::sym(qc_metric1), y=!! rlang::sym(qc_metric2), ## Color samples by a variable color=!! rlang::sym(sample_var))) + ## Add scatterplot geom_point(size=1) + ## Add regression line stat_smooth (geom=&quot;line&quot;, alpha=0.4, size=0.4, span=0.25, method = lm, color=&#39;orangered3&#39;) + ## Colors scale_color_manual(name = sample_var, values = colors) + theme_bw() + ## Add Pearson correlation coefficient between the metrics as subtitle labs(subtitle = paste0(&quot;Corr: &quot;, signif(cor(data[,qc_metric1], data[,qc_metric2], method = &quot;pearson&quot;), digits=3)), ## Add axis labels y= gsub(&#39;_&#39;, &#39; &#39;, qc_metric2), x = gsub(&#39;_&#39;, &#39; &#39;, qc_metric1)) + ## Plot margins and text size theme(plot.margin=unit (c (0.4,0.1,0.4,0.1), &#39;cm&#39;), axis.title = element_text(size = (7)), axis.text = element_text(size = (6)), plot.subtitle = element_text(size = 7, color=&#39;gray40&#39;), legend.text = element_text(size=6), legend.title = element_text(size=7)) return(plot) } ## QC scatterplots coloring by all sample variables multiple_QC_scatterplots &lt;- function(qc_metric1, qc_metric2){ sample_variables &lt;- c(&#39;Age&#39;, &#39;Sex&#39;, &#39;Group&#39;, &#39;plate&#39;, &#39;Pregnancy&#39;, &#39;flowcell&#39;) i=1 plots = list() for (sample_var in sample_variables) { plots[[i]]&lt;- QC_scatterplots(sample_var, qc_metric1, qc_metric2) i=i+1 } p &lt;- plot_grid(plots[[1]], plots[[2]], plots[[3]], plots[[4]], plots[[5]], plots[[6]], nrow = 2, rel_widths = c(1.1,1,1.2) ) p + theme(plot.margin = unit(c(0.5,0.1,0.5,0.1), &quot;cm&quot;)) } multiple_QC_scatterplots(&#39;mitoRate&#39;, &#39;rRNA_rate&#39;) For mitoRate vs rRNA_rate plots there’s a poor positive correlation which was anticipated since no obvious relationship exists between them, though if cytoplasmic mRNAs wouldn’t have been well captured (lowering the total number of mapping reads) we could expect an increase in both mitochondrial and ribosomal rates. Note the complete separation of samples in mitoRate (but not in rRNA_rate ) by Age, which in turn causes the grouping of male samples (all pups). multiple_QC_scatterplots(&#39;mitoRate&#39;, &#39;totalAssignedGene&#39;) Forcefully, mitoRate and totalAssignedGene have a strong negative correlation, which reveals the existence of very bad quality samples (with small totalAssignedGene and high mitoRate ). multiple_QC_scatterplots(&#39;sum&#39;, &#39;detected&#39;) Noticeably, a positive correlation is present for sum and detected and that is also congruent because a higher number of expressed-genes implies bigger library sizes, but that is not necessarily true in the other way around: just a few highly expressed genes (small number of detected genes) could increase the library size. Interestingly, in this case samples are diagonally separated by age. multiple_QC_scatterplots(&#39;sum&#39;, &#39;totalAssignedGene&#39;) Contrary to expectations, sum is not correlated to totalAssignedGene and it is unexpected because higher proportions of genes’ reads could initially increase library size. However, since totalAssignedGene is a fraction of the total reads, it could be that a high fraction of reads mapping to genes reflects a small number of total reads and do not necessarily implies more expressed genes (and therefore bigger libraries). In other words, even when totalAssignedGene equals 1, if the total number of reads is small, the genes won’t be widely covered by them and the libraries won’t be sizeable. Observe the separarion of samples by Age. multiple_QC_scatterplots(&#39;detected&#39;, &#39;totalAssignedGene&#39;) Lastly, there’s a slight positive correlation between totalAssignedGene and detected , which makes sense because reads assigned to genes rise the number of non-zero expressed genes but as mentioned, those genes are not necessarily highly expressed and thus, library sizes are not perforce so much bigger. Also note that the correlation wouldn’t be conserved within pup samples. Remarkably, samples were not differentiated by any other variable (including Group!) but the differences between adult and pup metrics suggest that they must be splitted into two different groups for the following analyses. 2.1.3 QC sample filtering After assessing how different or similar are the QC values between samples, we can now proceed to sample filtering based, precisely, on these metrics. For that, we will use isOutlier() from scater to identify outlier samples only at the lower end or the higher end, depending on the QC metric. library(scater) library(rlang) library(ggrepel) ## Separate data by Age rse_gene_pups&lt;- rse_gene_filt[,which(rse_gene_filt$Age==&quot;Pup&quot;)] rse_gene_adults &lt;- rse_gene_filt[,which(rse_gene_filt$Age==&quot;Adult&quot;)] ## Find outlier samples based on their QC metrics (samples that are 3 median-absolute-deviations away from the median) ## Filter all samples together ## Drop samples with lower library sizes (sum), detected number of genes and totalAssignedGene outliers_library_size &lt;- isOutlier(rse_gene_filt$sum, nmads = 3, type=&quot;lower&quot;) outliers_detected_num &lt;- isOutlier(rse_gene_filt$detected, nmads = 3, type=&quot;lower&quot;) outliers_totalAssignedGene &lt;- isOutlier(rse_gene_filt$totalAssignedGene, nmads = 3, type=&quot;lower&quot;) ## Drop samples with higher mitoRates and rRNA rates outliers_mito&lt;-isOutlier(rse_gene_filt$mitoRate, nmads = 3, type=&quot;higher&quot;) outliers_rRNArate &lt;- isOutlier(rse_gene_filt$rRNA_rate, nmads = 3, type=&quot;higher&quot;) ## Keep not outlier samples not_outliers&lt;-which(! (outliers_library_size | outliers_detected_num | outliers_totalAssignedGene | outliers_mito | outliers_rRNArate)) rse_gene_qc&lt;-rse_gene_filt[,not_outliers] ## Number of samples retained dim(rse_gene_qc)[2] #&gt; [1] 39 ## Add new variables to rse_gene_filt with info of samples retained/dropped rse_gene_filt$Retention_after_QC_filtering &lt;- as.vector(sapply(rse_gene_filt$SAMPLE_ID, function(x){if (x %in% rse_gene_qc$SAMPLE_ID){&#39;Retained&#39;} else{&#39;Dropped&#39;}})) ## Filter adult samples outliers_library_size &lt;- isOutlier(rse_gene_adults$sum, nmads = 3, type=&quot;lower&quot;) outliers_detected_num &lt;- isOutlier(rse_gene_adults$detected, nmads = 3, type=&quot;lower&quot;) outliers_totalAssignedGene &lt;- isOutlier(rse_gene_adults$totalAssignedGene, nmads = 3, type=&quot;lower&quot;) outliers_mito&lt;-isOutlier(rse_gene_adults$mitoRate, nmads = 3, type=&quot;higher&quot;) outliers_rRNArate &lt;- isOutlier(rse_gene_adults$rRNA_rate, nmads = 3, type=&quot;higher&quot;) not_outliers&lt;-which(! (outliers_library_size | outliers_detected_num | outliers_totalAssignedGene | outliers_mito | outliers_rRNArate)) rse_gene_adults_qc&lt;-rse_gene_adults[,not_outliers] ## Number of samples retained dim(rse_gene_adults_qc)[2] #&gt; [1] 20 rse_gene_adults$Retention_after_QC_filtering &lt;- as.vector(sapply(rse_gene_adults$SAMPLE_ID, function(x){if (x %in% rse_gene_adults_qc$SAMPLE_ID){&#39;Retained&#39;} else{&#39;Dropped&#39;}})) ## Filter pup samples outliers_library_size &lt;- isOutlier(rse_gene_pups$sum, nmads = 3, type=&quot;lower&quot;) outliers_detected_num &lt;- isOutlier(rse_gene_pups$detected, nmads = 3, type=&quot;lower&quot;) outliers_totalAssignedGene &lt;- isOutlier(rse_gene_pups$totalAssignedGene, nmads = 3, type=&quot;lower&quot;) outliers_mito&lt;-isOutlier(rse_gene_pups$mitoRate, nmads = 3, type=&quot;higher&quot;) outliers_rRNArate &lt;- isOutlier(rse_gene_pups$rRNA_rate, nmads = 3, type=&quot;higher&quot;) not_outliers&lt;-which(! (outliers_library_size | outliers_detected_num | outliers_totalAssignedGene | outliers_mito | outliers_rRNArate)) rse_gene_pups_qc&lt;-rse_gene_pups[,not_outliers] ## Number of samples retained dim(rse_gene_pups_qc)[2] #&gt; [1] 41 rse_gene_pups$Retention_after_QC_filtering &lt;- as.vector(sapply(rse_gene_pups$SAMPLE_ID, function(x){if (x %in% rse_gene_pups_qc$SAMPLE_ID){&#39;Retained&#39;} else{&#39;Dropped&#39;}})) We already filtered outlier samples … but what have we removed? It is always important to trace the QC metrics of the filtered samples to verify that they really are poor-quality. We don’t want to get rid of useful samples! So lets go back to the QC boxplots but now coloring samples according to whether they passed or not the filtering and also distinguishing samples’ groups by shape. ## Boxplots of QC metrics after sample filtering ## Boxplots boxplots_after_QC_filtering &lt;- function(rse_gene, qc_metric, sample_var){ ## Color samples colors=c(&#39;Retained&#39;=&#39;deepskyblue&#39;, &#39;Dropped&#39;=&#39;brown2&#39;) ## Sample shape by sample variables if (sample_var==&quot;Group&quot;){ shapes=c(&#39;Control&#39;=0, &#39;Experimental&#39;=15) } else if (sample_var==&quot;Age&quot;){ shapes=c(&#39;Adult&#39;=16, &#39;Pup&#39;=1) } else if (sample_var==&quot;Sex&quot;){ shapes=c(&#39;F&#39;=11, &#39;M&#39;=19) } else if (sample_var==&#39;Pregnancy&#39;){ shapes=c(&#39;Yes&#39;=10, &#39;No&#39;=1) } else if (sample_var==&#39;plate&#39;){ shapes=c(&#39;Plate1&#39;=12, &#39;Plate2&#39;=5, &#39;Plate3&#39;=4) } else if (sample_var==&#39;flowcell&#39;){ shapes=c(&#39;HKCG7DSXX&#39;=3,&#39;HKCMHDSXX&#39;=8, &#39;HKCNKDSXX&#39;=14, &#39;HKCTMDSXX&#39;=17) } y_label=str_replace_all(qc_metric, c(&quot;_&quot;=&quot; &quot;)) data &lt;- data.frame(colData(rse_gene)) ## Median of the QC var values median&lt;-median(eval(parse_expr(paste(&quot;rse_gene$&quot;, qc_metric, sep=&quot;&quot;)))) ## Median-absolute-deviation of the QC var values mad&lt;-mad(eval(parse_expr(paste(&quot;rse_gene$&quot;, qc_metric, sep=&quot;&quot;)))) plot &lt;- ggplot(data = data, mapping = aes(x = &#39;&#39;, y = !! rlang::sym(qc_metric), color = !! rlang::sym(&#39;Retention_after_QC_filtering&#39;))) + geom_jitter(alpha = 1, size = 2, aes(shape=eval(parse_expr((sample_var))))) + geom_boxplot(alpha = 0, size = 0.15, color=&#39;black&#39;) + scale_color_manual(values = colors) + scale_shape_manual(values = shapes) + labs(x=&quot;&quot;, y = y_label, color=&#39;Retention after QC filtering&#39;, shape=sample_var) + theme_classic() + ## Median line geom_hline(yintercept = median, size=0.5) + ## Line of median + 3 MADs geom_hline(yintercept = median+(3*mad), size=0.5, linetype=2) + ## Line of median - 3 MADs geom_hline(yintercept = median-(3*mad), size=0.5, linetype=2) + theme(axis.title = element_text(size = (9)), axis.text = element_text(size = (8)), legend.position=&quot;right&quot;, legend.text = element_text(size=8), legend.title = element_text(size=9)) return(plot) } In the following plot we can confirm that taking all samples together (both adults and pups) all adult samples are dropped by their high mitoRate , but that is not desirable because we want to analyze these samples too, so we need to analyze pup and adult samples separately. ## Plots ## All samples together p &lt;- boxplots_after_QC_filtering(rse_gene_filt, &#39;mitoRate&#39;, &#39;Age&#39;) p + theme(plot.margin=unit (c (2,4,2,4), &#39;cm&#39;)) For adults, only 3 controls are dropped, 3 of them by their mitoRate . ## Adult samples p &lt;- boxplots_after_QC_filtering(rse_gene_adults, &#39;mitoRate&#39;, &#39;Group&#39;) p + theme(plot.margin=unit (c (2,4,2,4), &#39;cm&#39;)) For pups, 1 experimental sample was dropped by its rRNA_rate . ## Pup samples p &lt;- boxplots_after_QC_filtering(rse_gene_pups, &#39;rRNA_rate&#39;, &#39;Group&#39;) p + theme(plot.margin=unit (c (2,4,2,4), &#39;cm&#39;)) Try the function yourself with different QC metrics and sample variables! #&gt; ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────── #&gt; setting value #&gt; version R version 4.3.0 (2023-04-21) #&gt; os Ubuntu 22.04.2 LTS #&gt; system x86_64, linux-gnu #&gt; ui X11 #&gt; language (EN) #&gt; collate en_US.UTF-8 #&gt; ctype en_US.UTF-8 #&gt; tz UTC #&gt; date 2023-06-28 #&gt; pandoc 2.19.2 @ /usr/local/bin/ (via rmarkdown) #&gt; #&gt; ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────── #&gt; package * version date (UTC) lib source #&gt; AnnotationDbi 1.62.1 2023-05-02 [1] Bioconductor #&gt; AnnotationHub 3.8.0 2023-04-25 [1] Bioconductor #&gt; aod 1.3.2 2022-04-02 [1] RSPM (R 4.3.0) #&gt; attempt 0.3.1 2020-05-03 [1] RSPM (R 4.3.0) #&gt; backports 1.4.1 2021-12-13 [1] RSPM (R 4.3.0) #&gt; base64enc 0.1-3 2015-07-28 [2] RSPM (R 4.3.0) #&gt; beachmat 2.16.0 2023-04-25 [1] Bioconductor #&gt; beeswarm 0.4.0 2021-06-01 [1] RSPM (R 4.3.0) #&gt; benchmarkme 1.0.8 2022-06-12 [1] RSPM (R 4.3.0) #&gt; benchmarkmeData 1.0.4 2020-04-23 [1] RSPM (R 4.3.0) #&gt; bibtex 0.5.1 2023-01-26 [1] RSPM (R 4.3.0) #&gt; Biobase * 2.60.0 2023-04-25 [1] Bioconductor #&gt; BiocFileCache * 2.8.0 2023-04-25 [1] Bioconductor #&gt; BiocGenerics * 0.46.0 2023-04-25 [1] Bioconductor #&gt; BiocIO 1.10.0 2023-04-25 [1] Bioconductor #&gt; BiocManager 1.30.21 2023-06-10 [1] RSPM (R 4.3.0) #&gt; BiocNeighbors 1.18.0 2023-04-25 [1] Bioconductor #&gt; BiocParallel * 1.34.2 2023-05-22 [1] Bioconductor #&gt; BiocSingular 1.16.0 2023-04-25 [1] Bioconductor #&gt; BiocStyle * 2.28.0 2023-04-25 [1] Bioconductor #&gt; biocthis * 1.10.3 2023-06-07 [1] Bioconductor #&gt; BiocVersion 3.17.1 2022-11-04 [2] Bioconductor #&gt; Biostrings 2.68.1 2023-05-16 [1] Bioconductor #&gt; bit 4.0.5 2022-11-15 [1] RSPM (R 4.3.0) #&gt; bit64 4.0.5 2020-08-30 [1] RSPM (R 4.3.0) #&gt; bitops 1.0-7 2021-04-24 [1] RSPM (R 4.3.0) #&gt; blob 1.2.4 2023-03-17 [1] RSPM (R 4.3.0) #&gt; bookdown 0.34 2023-05-09 [1] RSPM (R 4.3.0) #&gt; boot 1.3-28.1 2022-11-22 [3] CRAN (R 4.3.0) #&gt; broom 1.0.5 2023-06-09 [1] RSPM (R 4.3.0) #&gt; bslib 0.5.0 2023-06-09 [2] RSPM (R 4.3.0) #&gt; cachem 1.0.8 2023-05-01 [2] RSPM (R 4.3.0) #&gt; caTools 1.18.2 2021-03-28 [1] RSPM (R 4.3.0) #&gt; checkmate 2.2.0 2023-04-27 [1] RSPM (R 4.3.0) #&gt; circlize 0.4.15 2022-05-10 [1] RSPM (R 4.3.0) #&gt; cli 3.6.1 2023-03-23 [2] RSPM (R 4.3.0) #&gt; clue 0.3-64 2023-01-31 [1] RSPM (R 4.3.0) #&gt; cluster 2.1.4 2022-08-22 [3] CRAN (R 4.3.0) #&gt; codetools 0.2-19 2023-02-01 [3] CRAN (R 4.3.0) #&gt; colorspace 2.1-0 2023-01-23 [1] RSPM (R 4.3.0) #&gt; colourpicker 1.2.0 2022-10-28 [1] RSPM (R 4.3.0) #&gt; ComplexHeatmap * 2.16.0 2023-04-25 [1] Bioconductor #&gt; config 0.3.1 2020-12-17 [1] RSPM (R 4.3.0) #&gt; cowplot * 1.1.1 2020-12-30 [1] RSPM (R 4.3.0) #&gt; crayon 1.5.2 2022-09-29 [2] RSPM (R 4.3.0) #&gt; curl 5.0.1 2023-06-07 [2] RSPM (R 4.3.0) #&gt; data.table 1.14.8 2023-02-17 [1] RSPM (R 4.3.0) #&gt; DBI 1.1.3 2022-06-18 [1] RSPM (R 4.3.0) #&gt; dbplyr * 2.3.2 2023-03-21 [1] RSPM (R 4.3.0) #&gt; DelayedArray 0.26.3 2023-05-22 [1] Bioconductor #&gt; DelayedMatrixStats 1.22.1 2023-06-09 [1] Bioconductor #&gt; digest 0.6.32 2023-06-26 [2] RSPM (R 4.3.0) #&gt; doParallel 1.0.17 2022-02-07 [1] RSPM (R 4.3.0) #&gt; dotCall64 1.0-2 2022-10-03 [1] RSPM (R 4.3.0) #&gt; dplyr 1.1.2 2023-04-20 [1] RSPM (R 4.3.0) #&gt; dqrng 0.3.0 2021-05-01 [1] RSPM (R 4.3.0) #&gt; DropletUtils 1.20.0 2023-04-25 [1] Bioconductor #&gt; DT 0.28 2023-05-18 [1] RSPM (R 4.3.0) #&gt; edgeR * 3.42.4 2023-05-31 [1] Bioconductor #&gt; ellipsis 0.3.2 2021-04-29 [2] RSPM (R 4.3.0) #&gt; EnvStats 2.7.0 2022-03-07 [1] RSPM (R 4.3.0) #&gt; evaluate 0.21 2023-05-05 [2] RSPM (R 4.3.0) #&gt; ExperimentHub 2.8.0 2023-04-25 [1] Bioconductor #&gt; ExploreModelMatrix * 1.12.0 2023-04-25 [1] Bioconductor #&gt; fansi 1.0.4 2023-01-22 [2] RSPM (R 4.3.0) #&gt; farver 2.1.1 2022-07-06 [1] RSPM (R 4.3.0) #&gt; fastmap 1.1.1 2023-02-24 [2] RSPM (R 4.3.0) #&gt; fields 14.1 2022-08-12 [1] RSPM (R 4.3.0) #&gt; filelock 1.0.2 2018-10-05 [1] RSPM (R 4.3.0) #&gt; foreach 1.5.2 2022-02-02 [1] RSPM (R 4.3.0) #&gt; foreign 0.8-84 2022-12-06 [3] CRAN (R 4.3.0) #&gt; Formula 1.2-5 2023-02-24 [1] RSPM (R 4.3.0) #&gt; fs 1.6.2 2023-04-25 [2] RSPM (R 4.3.0) #&gt; generics 0.1.3 2022-07-05 [1] RSPM (R 4.3.0) #&gt; GenomeInfoDb * 1.36.1 2023-06-21 [1] Bioconductor #&gt; GenomeInfoDbData 1.2.10 2023-05-17 [1] Bioconductor #&gt; GenomicAlignments 1.36.0 2023-04-25 [1] Bioconductor #&gt; GenomicRanges * 1.52.0 2023-04-25 [1] Bioconductor #&gt; GetoptLong 1.0.5 2020-12-15 [1] RSPM (R 4.3.0) #&gt; ggbeeswarm 0.7.2 2023-04-29 [1] RSPM (R 4.3.0) #&gt; ggplot2 * 3.4.2 2023-04-03 [1] RSPM (R 4.3.0) #&gt; ggrepel * 0.9.3 2023-02-03 [1] RSPM (R 4.3.0) #&gt; GlobalOptions 0.1.2 2020-06-10 [1] RSPM (R 4.3.0) #&gt; glue 1.6.2 2022-02-24 [2] RSPM (R 4.3.0) #&gt; golem 0.4.1 2023-06-05 [1] RSPM (R 4.3.0) #&gt; gplots 3.1.3 2022-04-25 [1] RSPM (R 4.3.0) #&gt; gridExtra 2.3 2017-09-09 [1] RSPM (R 4.3.0) #&gt; gtable 0.3.3 2023-03-21 [1] RSPM (R 4.3.0) #&gt; gtools 3.9.4 2022-11-27 [1] RSPM (R 4.3.0) #&gt; HDF5Array 1.28.1 2023-05-01 [1] Bioconductor #&gt; here * 1.0.1 2020-12-13 [1] RSPM (R 4.3.0) #&gt; highr 0.10 2022-12-22 [2] RSPM (R 4.3.0) #&gt; Hmisc * 5.1-0 2023-05-08 [1] RSPM (R 4.3.0) #&gt; hms 1.1.3 2023-03-21 [1] RSPM (R 4.3.0) #&gt; htmlTable 2.4.1 2022-07-07 [1] RSPM (R 4.3.0) #&gt; htmltools 0.5.5 2023-03-23 [2] RSPM (R 4.3.0) #&gt; htmlwidgets 1.6.2 2023-03-17 [2] RSPM (R 4.3.0) #&gt; httpuv 1.6.11 2023-05-11 [2] RSPM (R 4.3.0) #&gt; httr 1.4.6 2023-05-08 [2] RSPM (R 4.3.0) #&gt; igraph 1.5.0 2023-06-16 [1] RSPM (R 4.3.0) #&gt; interactiveDisplayBase 1.38.0 2023-04-25 [1] Bioconductor #&gt; IRanges * 2.34.1 2023-06-22 [1] Bioconductor #&gt; irlba 2.3.5.1 2022-10-03 [1] RSPM (R 4.3.0) #&gt; iSEE * 2.12.0 2023-04-25 [1] Bioconductor #&gt; iterators 1.0.14 2022-02-05 [1] RSPM (R 4.3.0) #&gt; jquerylib 0.1.4 2021-04-26 [2] RSPM (R 4.3.0) #&gt; jsonlite 1.8.5 2023-06-05 [2] RSPM (R 4.3.0) #&gt; KEGGREST 1.40.0 2023-04-25 [1] Bioconductor #&gt; KernSmooth 2.23-21 2023-05-03 [3] RSPM (R 4.3.0) #&gt; knitr 1.43 2023-05-25 [2] RSPM (R 4.3.0) #&gt; labeling 0.4.2 2020-10-20 [1] RSPM (R 4.3.0) #&gt; later 1.3.1 2023-05-02 [2] RSPM (R 4.3.0) #&gt; lattice 0.21-8 2023-04-05 [3] CRAN (R 4.3.0) #&gt; lazyeval 0.2.2 2019-03-15 [1] RSPM (R 4.3.0) #&gt; lifecycle 1.0.3 2022-10-07 [2] RSPM (R 4.3.0) #&gt; limma * 3.56.2 2023-06-04 [1] Bioconductor #&gt; lme4 1.1-33 2023-04-25 [1] RSPM (R 4.3.0) #&gt; lobstr * 1.1.2 2022-06-22 [1] RSPM (R 4.3.0) #&gt; locfit 1.5-9.8 2023-06-11 [1] RSPM (R 4.3.0) #&gt; lubridate 1.9.2 2023-02-10 [1] RSPM (R 4.3.0) #&gt; magick 2.7.4 2023-03-09 [1] RSPM (R 4.3.0) #&gt; magrittr 2.0.3 2022-03-30 [2] RSPM (R 4.3.0) #&gt; maps 3.4.1 2022-10-30 [1] RSPM (R 4.3.0) #&gt; MASS 7.3-60 2023-05-04 [3] RSPM (R 4.3.0) #&gt; Matrix 1.5-4.1 2023-05-18 [3] RSPM (R 4.3.0) #&gt; MatrixGenerics * 1.12.2 2023-06-09 [1] Bioconductor #&gt; matrixStats * 1.0.0 2023-06-02 [1] RSPM (R 4.3.0) #&gt; memoise 2.0.1 2021-11-26 [2] RSPM (R 4.3.0) #&gt; mgcv 1.8-42 2023-03-02 [3] CRAN (R 4.3.0) #&gt; mime 0.12 2021-09-28 [2] RSPM (R 4.3.0) #&gt; miniUI 0.1.1.1 2018-05-18 [2] RSPM (R 4.3.0) #&gt; minqa 1.2.5 2022-10-19 [1] RSPM (R 4.3.0) #&gt; munsell 0.5.0 2018-06-12 [1] RSPM (R 4.3.0) #&gt; mvtnorm 1.2-2 2023-06-08 [1] RSPM (R 4.3.0) #&gt; nlme 3.1-162 2023-01-31 [3] CRAN (R 4.3.0) #&gt; nloptr 2.0.3 2022-05-26 [1] RSPM (R 4.3.0) #&gt; nnet 7.3-19 2023-05-03 [3] RSPM (R 4.3.0) #&gt; paletteer 1.5.0 2022-10-19 [1] RSPM (R 4.3.0) #&gt; patchwork * 1.1.2 2022-08-19 [1] RSPM (R 4.3.0) #&gt; pbkrtest 0.5.2 2023-01-19 [1] RSPM (R 4.3.0) #&gt; pheatmap * 1.0.12 2019-01-04 [1] RSPM (R 4.3.0) #&gt; pillar 1.9.0 2023-03-22 [2] RSPM (R 4.3.0) #&gt; pkgconfig 2.0.3 2019-09-22 [2] RSPM (R 4.3.0) #&gt; plotly 4.10.2 2023-06-03 [1] RSPM (R 4.3.0) #&gt; plyr 1.8.8 2022-11-11 [1] RSPM (R 4.3.0) #&gt; png 0.1-8 2022-11-29 [1] RSPM (R 4.3.0) #&gt; postcards * 0.2.3 2022-01-07 [1] RSPM (R 4.3.0) #&gt; prettyunits 1.1.1 2020-01-24 [2] RSPM (R 4.3.0) #&gt; progress 1.2.2 2019-05-16 [1] RSPM (R 4.3.0) #&gt; promises 1.2.0.1 2021-02-11 [2] RSPM (R 4.3.0) #&gt; purrr 1.0.1 2023-01-10 [2] RSPM (R 4.3.0) #&gt; R.cache 0.16.0 2022-07-21 [1] RSPM (R 4.3.0) #&gt; R.methodsS3 1.8.2 2022-06-13 [1] RSPM (R 4.3.0) #&gt; R.oo 1.25.0 2022-06-12 [1] RSPM (R 4.3.0) #&gt; R.utils 2.12.2 2022-11-11 [1] RSPM (R 4.3.0) #&gt; R6 2.5.1 2021-08-19 [2] RSPM (R 4.3.0) #&gt; rappdirs 0.3.3 2021-01-31 [2] RSPM (R 4.3.0) #&gt; rbibutils 2.2.13 2023-01-13 [1] RSPM (R 4.3.0) #&gt; RColorBrewer * 1.1-3 2022-04-03 [1] RSPM (R 4.3.0) #&gt; Rcpp 1.0.10 2023-01-22 [2] RSPM (R 4.3.0) #&gt; RCurl 1.98-1.12 2023-03-27 [1] RSPM (R 4.3.0) #&gt; Rdpack 2.4 2022-07-20 [1] RSPM (R 4.3.0) #&gt; recount3 * 1.10.2 2023-05-07 [1] Bioconductor #&gt; RefManageR * 1.4.0 2022-09-30 [1] RSPM (R 4.3.0) #&gt; remaCor 0.0.16 2023-06-21 [1] RSPM (R 4.3.0) #&gt; rematch2 2.1.2 2020-05-01 [2] RSPM (R 4.3.0) #&gt; reshape2 1.4.4 2020-04-09 [1] RSPM (R 4.3.0) #&gt; restfulr 0.0.15 2022-06-16 [1] RSPM (R 4.3.0) #&gt; rhdf5 2.44.0 2023-04-25 [1] Bioconductor #&gt; rhdf5filters 1.12.1 2023-04-30 [1] Bioconductor #&gt; Rhdf5lib 1.22.0 2023-04-25 [1] Bioconductor #&gt; RhpcBLASctl 0.23-42 2023-02-11 [1] RSPM (R 4.3.0) #&gt; rintrojs 0.3.2 2022-08-09 [1] RSPM (R 4.3.0) #&gt; rjson 0.2.21 2022-01-09 [1] RSPM (R 4.3.0) #&gt; rlang * 1.1.1 2023-04-28 [2] RSPM (R 4.3.0) #&gt; rmarkdown 2.22 2023-06-01 [2] RSPM (R 4.3.0) #&gt; rpart 4.1.19 2022-10-21 [3] CRAN (R 4.3.0) #&gt; rprojroot 2.0.3 2022-04-02 [2] RSPM (R 4.3.0) #&gt; Rsamtools 2.16.0 2023-04-25 [1] Bioconductor #&gt; RSQLite 2.3.1 2023-04-03 [1] RSPM (R 4.3.0) #&gt; rstudioapi 0.14 2022-08-22 [2] RSPM (R 4.3.0) #&gt; rsvd 1.0.5 2021-04-16 [1] RSPM (R 4.3.0) #&gt; rtracklayer 1.60.0 2023-04-25 [1] Bioconductor #&gt; S4Arrays 1.0.4 2023-05-14 [1] Bioconductor #&gt; S4Vectors * 0.38.1 2023-05-02 [1] Bioconductor #&gt; sass 0.4.6 2023-05-03 [2] RSPM (R 4.3.0) #&gt; ScaledMatrix 1.8.1 2023-05-03 [1] Bioconductor #&gt; scales 1.2.1 2022-08-20 [1] RSPM (R 4.3.0) #&gt; scater * 1.28.0 2023-04-25 [1] Bioconductor #&gt; scuttle * 1.10.1 2023-05-02 [1] Bioconductor #&gt; sessioninfo * 1.2.2 2021-12-06 [2] RSPM (R 4.3.0) #&gt; shape 1.4.6 2021-05-19 [1] RSPM (R 4.3.0) #&gt; shiny 1.7.4 2022-12-15 [2] RSPM (R 4.3.0) #&gt; shinyAce 0.4.2 2022-05-06 [1] RSPM (R 4.3.0) #&gt; shinydashboard 0.7.2 2021-09-30 [1] RSPM (R 4.3.0) #&gt; shinyjs 2.1.0 2021-12-23 [1] RSPM (R 4.3.0) #&gt; shinyWidgets 0.7.6 2023-01-08 [1] RSPM (R 4.3.0) #&gt; SingleCellExperiment * 1.22.0 2023-04-25 [1] Bioconductor #&gt; smokingMouse * 0.99.5 2023-06-28 [1] Github (LieberInstitute/smokingMouse@2e7640c) #&gt; spam 2.9-1 2022-08-07 [1] RSPM (R 4.3.0) #&gt; sparseMatrixStats 1.12.1 2023-06-20 [1] Bioconductor #&gt; SpatialExperiment * 1.10.0 2023-04-25 [1] Bioconductor #&gt; spatialLIBD * 1.12.0 2023-04-27 [1] Bioconductor #&gt; statmod 1.5.0 2023-01-06 [1] RSPM (R 4.3.0) #&gt; stringi 1.7.12 2023-01-11 [2] RSPM (R 4.3.0) #&gt; stringr * 1.5.0 2022-12-02 [2] RSPM (R 4.3.0) #&gt; styler 1.10.1 2023-06-05 [1] RSPM (R 4.3.0) #&gt; SummarizedExperiment * 1.30.2 2023-06-06 [1] Bioconductor #&gt; tibble 3.2.1 2023-03-20 [2] RSPM (R 4.3.0) #&gt; tidyr 1.3.0 2023-01-24 [1] RSPM (R 4.3.0) #&gt; tidyselect 1.2.0 2022-10-10 [1] RSPM (R 4.3.0) #&gt; timechange 0.2.0 2023-01-11 [1] RSPM (R 4.3.0) #&gt; usethis * 2.2.1 2023-06-23 [2] RSPM (R 4.3.0) #&gt; utf8 1.2.3 2023-01-31 [2] RSPM (R 4.3.0) #&gt; variancePartition * 1.30.2 2023-06-07 [1] Bioconductor #&gt; vctrs 0.6.3 2023-06-14 [2] RSPM (R 4.3.0) #&gt; vipor 0.4.5 2017-03-22 [1] RSPM (R 4.3.0) #&gt; viridis 0.6.3 2023-05-03 [1] RSPM (R 4.3.0) #&gt; viridisLite 0.4.2 2023-05-02 [1] RSPM (R 4.3.0) #&gt; withr 2.5.0 2022-03-03 [2] RSPM (R 4.3.0) #&gt; xfun 0.39 2023-04-20 [2] RSPM (R 4.3.0) #&gt; XML 3.99-0.14 2023-03-19 [1] RSPM (R 4.3.0) #&gt; xml2 1.3.4 2023-04-27 [2] RSPM (R 4.3.0) #&gt; xtable 1.8-4 2019-04-21 [2] RSPM (R 4.3.0) #&gt; XVector 0.40.0 2023-04-25 [1] Bioconductor #&gt; yaml 2.3.7 2023-01-23 [2] RSPM (R 4.3.0) #&gt; zlibbioc 1.46.0 2023-04-25 [1] Bioconductor #&gt; #&gt; [1] /__w/_temp/Library #&gt; [2] /usr/local/lib/R/site-library #&gt; [3] /usr/local/lib/R/library #&gt; #&gt; ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── "],["biocthis-introduction.html", "7 biocthis introduction", " 7 biocthis introduction Instructor: Leo "],["recount3-introduction.html", "8 recount3 introduction", " 8 recount3 introduction Instructor: Leo "],["interpreting-model-coefficients-with-exploremodelmatrix.html", "9 Interpreting model coefficients with ExploreModelMatrix", " 9 Interpreting model coefficients with ExploreModelMatrix Instructor: Leo "],["differential-gene-expression-analysis-with-limma.html", "10 Differential gene expression analysis with limma", " 10 Differential gene expression analysis with limma Instructor: Leo "],["differential-gene-expression-exercise-with-recount3-data.html", "11 Differential gene expression exercise with recount3 data", " 11 Differential gene expression exercise with recount3 data Instructor: Leo "],["de-model-building-with-variancepartition.html", "12 DE model building with variancePartition", " 12 DE model building with variancePartition Instructor: Daianna "],["expression-heatmaps-with-complexheatmap.html", "13 Expression heatmaps with ComplexHeatmap", " 13 Expression heatmaps with ComplexHeatmap Instructor: Renee "],["exercise-with-variancepartition-and-complexheatmap.html", "14 Exercise with variancePartition and ComplexHeatmap", " 14 Exercise with variancePartition and ComplexHeatmap Instructors: Daianna and Renee "],["tbd.html", "15 TBD", " 15 TBD Instructor: Leo "],["introduction-to-the-world-of-spatially-resolved-transcriptomics-with-visium-data.html", "16 Introduction to the world of spatially-resolved transcriptomics with Visium data", " 16 Introduction to the world of spatially-resolved transcriptomics with Visium data SingleCellExperiment –&gt; SpatialExperiment –&gt; spatialLIBD Instructor: Leo "],["downloading-public-visium-spatial-data-and-visualizing-it-with-spatiallibd.html", "17 Downloading public Visium spatial data and visualizing it with spatialLIBD", " 17 Downloading public Visium spatial data and visualizing it with spatialLIBD Instructor: Leo "],["re-use-of-bulk-rna-seq-methods-for-spatial-data-exercise.html", "18 Re-use of bulk RNA-seq methods for spatial data exercise", " 18 Re-use of bulk RNA-seq methods for spatial data exercise Instructor: Leo "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
